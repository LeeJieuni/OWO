{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a395dea\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  style: {\n    \"position\": \"relative\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"circle\"\n};\nconst _hoisted_3 = {\n  width: \"150\",\n  style: {\n    \"background-color\": \"white\",\n    \"border-radius\": \"50%\"\n  },\n  viewBox: \"0 0 220 220\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<g transform=\\\"translate(110,110)\\\" data-v-1a395dea><circle r=\\\"100\\\" class=\\\"e-c-base\\\" data-v-1a395dea></circle><g transform=\\\"rotate(-90)\\\" data-v-1a395dea><circle r=\\\"100\\\" class=\\\"e-c-progress\\\" data-v-1a395dea></circle><g id=\\\"e-pointer\\\" data-v-1a395dea><circle cx=\\\"100\\\" cy=\\\"0\\\" r=\\\"8\\\" class=\\\"e-c-pointer\\\" data-v-1a395dea></circle></g></g></g>\", 1);\n\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = {\n  class: \"controlls\"\n};\nconst _hoisted_7 = {\n  class: \"display-remain-time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"div\", _hoisted_2, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_3, _hoisted_5))], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $data.isStarted]]), _withDirectives(_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($data.timesetting), 1\n  /* TEXT */\n  )], 512\n  /* NEED_PATCH */\n  ), [[_vShow, $data.isStarted]])]);\n}","map":{"version":3,"mappings":";;;;;EACKA,KAAyB,EAAzB;IAAA;EAAA;;;EACqBC,KAAK,EAAC;;;EACvBC,KAAK,EAAC;EAAMF,KAAmD,EAAnD;IAAA;IAAA;EAAA;EAAoDG,OAAO,EAAC;EAAcC,KAAK,EAAC;;;;;oBAC/FC;;EAWoBJ,KAAK,EAAC;;;EACvBA,KAAK,EAAC;;;uBAffK,oBAiBM,KAjBN,cAiBM,iBAhBJC,oBAYM,KAZN,cAYM,gBAXJD,oBAUM,KAVN,cAUME,UAVN,CAWI,EAZN;;EAAA,aAAaC,kBAgBT,kBAHJF,oBAEM,KAFN,cAEM,CADJA,oBAAsD,KAAtD,cAAsDG,iBAAnBD,iBAAmB,CAAtD,EAA8C;EAAA;EAA9C,CACI,CAFN;;EAAA,aAAaA,kBAGT,CAjBN","names":["style","class","width","viewBox","xmlns","_hoisted_4","_createElementBlock","_createElementVNode","_hoisted_5","$data","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\multicampus\\Desktop\\새 폴더2\\S07P12C202\\frontend\\owo\\src\\components\\Room\\setTimer2.vue"],"sourcesContent":["<template>\n<div style=\"position:relative\">\n  <div v-show=\"isStarted\" class=\"circle\">\n    <svg width=\"150\" style=\"background-color:white; border-radius: 50%;\" viewBox=\"0 0 220 220\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g transform=\"translate(110,110)\">\n        <circle r=\"100\" class=\"e-c-base\"/>\n        <g transform=\"rotate(-90)\">\n          <circle r=\"100\" class=\"e-c-progress\"/>\n          <g id=\"e-pointer\">\n            <circle cx=\"100\" cy=\"0\" r=\"8\" class=\"e-c-pointer\"/>\n          </g>\n        </g>\n      </g>\n    </svg>\n  </div>\n  <div v-show=\"isStarted\" class=\"controlls\">\n    <div class=\"display-remain-time\">{{timesetting}}</div>\n  </div>\n</div>\n</template>\n\n<script>\nexport default {\n  components: {\n  },\n  data() {\n    return {\n      intervalTimer: null,\n      timeLeft: null,\n      wholeTime: 10,\n      isPaused: false,\n      isStarted: false,\n      length: Math.PI * 2 * 100,\n      timesetting: '',\n    };\n  },\n  setup() {},\n  created() {},\n  moundted() {},\n  unmounted() {},\n  methods: {\n    pauseTimer() {\n      const progressBar = document.querySelector('.e-c-progress');\n      progressBar.style.strokeDasharray = this.length;\n      if (this.isStarted === false) {\n        this.timer(this.wholeTime);\n        this.isStarted = true;\n      }\n    },\n    update(value, timePercent) {\n      const offset = (+this.length) - (this.length * value) / (timePercent);\n      const progressBar = document.querySelector('.e-c-progress');\n      progressBar.style.strokeDashoffset = offset;\n      const pointer = document.getElementById('e-pointer');\n      pointer.style.transform = `rotate(${(360 * value) / (timePercent)}deg)`;\n    },\n    displayTimeLeft(timeLeft) { // displays time on the input\n      const minutes = Math.floor(timeLeft / 60);\n      const seconds = timeLeft % 60;\n      const displayString = `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n      this.timesetting = displayString;\n      this.update(timeLeft, this.wholeTime);\n    },\n    timer(seconds) { // counts time, takes seconds\n      const remainTime = Date.now() + (seconds * 1000);\n      this.displayTimeLeft(seconds);\n      this.intervalTimer = setInterval(() => {\n        this.timeLeft = Math.round((remainTime - Date.now()) / 1000);\n        console.log(this.timeLeft);\n        if (this.timeLeft < 0) {\n          clearInterval(this.intervalTimer);\n          this.isStarted = false;\n          this.displayTimeLeft(this.wholeTime);\n          return;\n        }\n        this.displayTimeLeft(this.timeLeft);\n      }, 1000);\n    },\n  },\n};\n// update(wholeTime, wholeTime); // refreshes progress bar\n// displayTimeLeft(wholeTime);\n</script>\n<style scoped>\n@import url('https://fonts.googleapis.com/css?family=Roboto:100,300');\n\nbutton[data-setter] {\n  outline: none;\n  background: transparent;\n  border: none;\n  font-family: 'Roboto';\n  font-weight: 300;\n  font-size: 18px;\n  width: 25px;\n  height: 30px;\n  color: #4E8Aff;\n  cursor: pointer;\n}\n\nbutton[data-setter]:hover { opacity: 0.5; }\n\n.container {\n  position: relative;\n  top: 0px;\n  width: 0px;\n  margin: 0 auto;\n}\n\n.setters {\n  position: absolute;\n  left: 85px;\n  top: 75px;\n}\n\n.minutes-set {\n  float: left;\n  margin-right: 28px;\n}\n\n.seconds-set { float: right; }\n\n.controlls {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.display-remain-time {\n  font-family: 'Roboto';\n  font-weight: 100;\n  font-size: 40px;\n  color: #4E8Aff;\n}\n\n#pause {\n  outline: none;\n  background: transparent;\n  border: none;\n  margin-top: 10px;\n  width: 50px;\n  height: 50px;\n  position: relative;\n}\n\n.play::before {\n  display: block;\n  content: \"\";\n  position: absolute;\n  top: 8px;\n  left: 16px;\n  border-top: 15px solid transparent;\n  border-bottom: 15px solid transparent;\n  border-left: 22px solid #4E8Aff;\n}\n\n.pause::after {\n  content: \"\";\n  position: absolute;\n  top: 8px;\n  left: 12px;\n  width: 15px;\n  height: 30px;\n  background-color: transparent;\n  border-radius: 1px;\n  border: 5px solid #4E8Aff;\n  border-top: none;\n  border-bottom: none;\n}\n\n#pause:hover { opacity: 0.8; }\n\n.e-c-base {\n  fill: none;\n  stroke: #B6B6B6;\n  stroke-width: 4px\n}\n\n.e-c-progress {\n  fill: none;\n  stroke: #4E8Aff;\n  stroke-width: 4px;\n  transition: stroke-dashoffset 0.7s;\n}\n\n.e-c-pointer {\n  fill: #FFF;\n  stroke: #4E8Aff;\n  stroke-width: 2px;\n}\n\n#e-pointer { transition: transform 0.7s; }\nh1 { margin-top:150px; text-align:center;}\nbody { background-color:#f7f7f7;}\n\n.mybtn5 {\n  background-color:transparent;\n  border:none;\n  position:fixed;\n  top:25%;\n  right:105px;\n  z-index: 700;\n}\n\n.menu_icon2 {\n  width:50px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}