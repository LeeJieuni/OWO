{"ast":null,"code":"import router from '@/router';\nimport axios from 'axios';\nimport swal from 'sweetalert2';\nwindow.Swal = swal; // eslint-disable-next-line\n\nexport const accounts = {\n  namespaced: true,\n  state: () => ({\n    LoginErr: '',\n    isLoginErr: false,\n    accessToken: null,\n    refreshToken: null,\n    signupInfo: {\n      signupErr: false,\n      message: ''\n    },\n    userInfo: {\n      nick: '',\n      gender: '',\n      age: '',\n      height: '',\n      weight: '',\n      activityNum: '',\n      activityHour: '',\n      activityLevel: '',\n      id: '',\n      email: ''\n    },\n    physicalInfo: {\n      bmi: null,\n      bmr: null,\n      caloriePerDay: null\n    },\n    image: '',\n    record: {\n      point: '',\n      // 경쟁\n      exp: '' // 자유, 영상 경험치\n\n    },\n    // compete: {\n    //   workout1: '', // 운동1 최고기록\n    //   workout2: '', // 운동2 최고기록\n    //   workout3: '', // 운동3 최고기록\n    // },\n    goals: '',\n    profileImg: ''\n  }),\n  mutations: {\n    SET_SIGNUP_MSG: (state, message) => {\n      state.signupInfo.message = message;\n      state.signupInfo.singupErr = true;\n    },\n    SET_LOGIN_ERR: (state, message) => {\n      state.LoginErr = message;\n      state.isLoginErr = true;\n    },\n    SET_ACCESS_TOKEN: (state, token) => {\n      state.accessToken = token;\n    },\n    SET_REFRESH_TOKEN: (state, token) => {\n      state.refreshToken = token;\n    },\n    SET_USER_INFO: (state, payload) => {\n      // 로그인 시 반환되는 유저정보 state에 할당\n      state.userInfo.id = payload.id;\n      state.userInfo.email = payload.email;\n      state.userInfo.nick = payload.nick;\n      state.userInfo.gender = payload.gender;\n      state.userInfo.age = payload.age;\n      state.userInfo.height = payload.height;\n      state.userInfo.weight = payload.weight;\n      state.userInfo.activityNum = payload.activityNum;\n      state.userInfo.activityHour = payload.activityHour;\n      state.userInfo.activityLevel = payload.activityLevel;\n\n      if (state.userInfo.nick === '' || !state.userInfo.nick) {\n        const {\n          email\n        } = state.userInfo;\n        const atSignIndex = email.indexOf('@');\n        const emailNick = email.substr(0, atSignIndex);\n        state.userInfo.nick = emailNick;\n      }\n    },\n    SET_PHYSICAL_INFO: (state, payload) => {\n      state.physicalInfo.bmi = payload.bmi;\n      state.physicalInfo.bmr = payload.bmr;\n      state.physicalInfo.caloriePerDay = payload.caloriePerDay;\n    },\n    SET_SLOGAN: (state, payload) => {\n      state.slogan = payload;\n    },\n    SET_PROFILE_IMG: (state, payload) => {\n      state.image = payload;\n    },\n    SET_POINT: (state, payload) => {\n      state.record.point = payload;\n    },\n    // SET_COMPETE: (state, payload) => {\n    //   state.compete.workout1 = payload.workout1;\n    //   state.compete.workout2 = payload.workout2;\n    //   state.compete.workout3 = payload.workout3;\n    // },\n    SET_GOAL: (state, payload) => {\n      state.goals = payload;\n    }\n  },\n  actions: {\n    saveAccessToken({\n      commit\n    }, token) {\n      sessionStorage.setItem('accessToken', token);\n      commit('SET_ACCESS_TOKEN', token);\n    },\n\n    saveRefreshToken({\n      commit\n    }, token) {\n      sessionStorage.setItem('refreshToken', token); // 세션스토리지에 리프레시 토큰 저장\n\n      commit('SET_REFRESH_TOKEN', token); // state 할당\n    },\n\n    removeToken({\n      commit\n    }) {\n      commit('SET_ACCESS_TOKEN', null);\n      commit('SET_REFRESH_TOKEN', null);\n      sessionStorage.removeItem('accessToken'); // accessToken 제거\n\n      sessionStorage.removeItem('refreshToken'); // refreshToken 제거\n\n      sessionStorage.removeItem('vuex'); // 사용자 정보 제거\n    },\n\n    setUserInfo({\n      commit\n    }, payload) {\n      commit('SET_USER_INFO', payload);\n    },\n\n    login({\n      dispatch,\n      commit\n    }, credentials) {\n      // 로그인\n      axios.post('https://i7c202.p.ssafy.io:8282/api/auth/login', credentials) //\n      .then(res => {\n        const response = res.data.data;\n        const access = response.accessToken;\n        const refresh = response.refreshToken;\n        console.log(response);\n        dispatch('saveAccessToken', access);\n        dispatch('saveRefreshToken', refresh);\n        dispatch('setUserInfo', response);\n        dispatch('fetchPhysicalInfo');\n        dispatch('fetchSlogan');\n        dispatch('fetchPoint');\n        dispatch('fetchCompete');\n        dispatch('fetchGoal');\n        dispatch('fetchProfileImg');\n        router.push('/');\n      }).catch(err => {\n        if (err.response.status === 400) {\n          if (err.response.data.message === '회원가입 이메일 인증이 필요합니다.') {\n            commit('SET_LOGIN_ERR', err.response.data.message);\n            sessionStorage.removeItem('vuex');\n            swal.fire('#오운완', '회원가입 이메일 인증이 필요합니다.', 'warning');\n          } else if (err.response.data.message === '이메일 혹은 비밀번호가 맞지 않습니다.') {\n            commit('SET_LOGIN_ERR', err.response.data.message);\n            sessionStorage.removeItem('vuex');\n            swal.fire('#오운완', '이메일 혹은 비밀번호가 맞지 않습니다.', 'warning');\n          }\n        } else {\n          // commit('SET_LOGIN_ERR', err.response.data.message); // 서버 error\n          swal.fire('#오운완', '서버 문제로 로그인에 실패하였습니다. 다시 시도해 주세요!', 'warning');\n        }\n      });\n    },\n\n    socialLogin({\n      commit\n    }, token) {\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/social',\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': token\n        }\n      }).then(res => {\n        console.log('소셜로그인 in vuex');\n        commit('SET_USER_INFO', res.data);\n        router.push('/');\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    logout({\n      state,\n      dispatch\n    }) {\n      // 로그아웃\n      // eslint-disable-next-line\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/logout',\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        }\n      }).then(() => {\n        dispatch('removeToken');\n        swal.fire('#오운완', '로그아웃 성공!', 'success');\n        router.push('/');\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    register({\n      commit\n    }, credentials) {\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/auth/join',\n        method: 'post',\n        data: credentials\n      }).then(res => {\n        commit('SET_SIGNUP_MSG', res.data.message);\n        swal.fire('#오운완', '회원가입 성공! 이메일 인증 후 로그인 해주세요!', 'success');\n        router.push('/login');\n      }).catch(err => {\n        if (err.response.data === 'OVERLAP') {\n          commit('SET_SIGNUP_MSG', err.response.data);\n          swal.fire('#오운완', '이미 회원가입 된 이메일입니다.', 'warning');\n          router.push('/login');\n        } else {\n          commit('SET_SIGNUP_MSG', err.response.data);\n          swal.fire('#오운완', '회원가입에 실패했습니다. 다시 시도해 주세요.', 'warning');\n        }\n      });\n    },\n\n    findPassword({\n      state\n    }) {\n      // 비밀번호 찾기\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/authpassword',\n        method: 'get',\n        header: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        },\n        data: state.userInfo.email // 사용자 이메일 데이터를 이용해서 password 찾기\n\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    passwordChg({\n      state\n    }, payload) {\n      // 비밀번호 변경\n      axios({\n        url: '',\n        method: '',\n        header: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        },\n        data: payload\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    fetchPhysicalInfo({\n      state,\n      commit\n    }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/bmi/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        }\n      }).then(res => {\n        console.log('운동분석 업데이트');\n        console.log(res.data.data);\n        commit('SET_PHYSICAL_INFO', res.data.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    setSlogan({\n      commit\n    }, payload) {\n      commit('SET_SLOGAN', payload);\n    },\n\n    fetchSlogan({\n      state,\n      dispatch\n    }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/slogan/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        }\n      }).then(res => {\n        console.log(res.data);\n        dispatch('setSlogan', res.data.data.slogan);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    updateSlogan({\n      state,\n      dispatch\n    }, payload) {\n      console.log('axios 하기 전');\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/user/slogan',\n        method: 'put',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        },\n        data: payload\n      }).then(res => {\n        // console.log('res');\n        console.log(res.data.message);\n        dispatch('fetchSlogan');\n        alert('수정되었습니다.');\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    updateUserInfo({\n      state,\n      dispatch\n    }, payload) {\n      console.log(payload);\n      console.log('액시오스하기전');\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/user',\n        method: 'put',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        },\n        data: payload\n      }).then(res => {\n        dispatch('setUserInfo', res.data.data);\n        dispatch('fetchPhysicalInfo');\n        alert('정보가 수정되었습니다.'); // router.push({ name: 'MyPageMainView' });\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    setProfileImg({\n      commit\n    }, payload) {\n      commit('SET_PROFILE_IMG', payload);\n    },\n\n    fetchProfileImg({\n      state,\n      dispatch\n    }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        } // responseType: 'blob',\n\n      }).then(res => {\n        // eslint-disable-next-line\n        // const url = window.URL.createObjectURL(new Blob([res.data], { type: res.headers['content-type'] }));\n        // console.log('이미지axios응답');\n        // console.log(res);\n        // console.log(res.data);\n        // console.log('응답 끝');\n        const url = URL.createObjectURL(res.data);\n        dispatch('setProfileImg', url);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    updateProfileImg({\n      state,\n      dispatch\n    }, payload) {\n      // console.log('이미지 업데이트 axios 하기 전');\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/img/${state.userInfo.id}`,\n        method: 'post',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken // 'Content-Type': 'application/json',\n\n        },\n        data: payload\n      }).then(res => {\n        // console.log('이미지 업데이트 res.data.data 보내기 전');\n        // console.log(res);\n        alert(res.data.message); // console.log(payload);\n\n        dispatch('setProfileImg', res.data); // dispatch('fetchProfileImg', res.data);  // 이미지 바꾸고 바로 페치하고싶은데, 이미지 바꾼 게 완료된 후 하고싶은데\n        // router.push({ name: 'MyPageMainView' });\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    fetchPoint({\n      state,\n      commit\n    }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/point/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        }\n      }).then(res => {\n        // console.log(res.data.message);\n        // console.log(res.data.data);\n        commit('SET_POINT', res.data.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    fetchCompete({\n      state,\n      commit\n    }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/compete/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        }\n      }).then(res => {\n        // console.log(res.data.message);\n        console.log(res.data.data);\n        commit('SET_COMPETE', res.data.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n\n    fetchGoal({\n      state,\n      commit\n    }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/compete/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken\n        }\n      }).then(res => {\n        // console.log(res.data.message);\n        console.log(res.data.data);\n        commit('SET_GOAL', res.data.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  },\n  getters: {\n    isLogin: state => !!state.accessToken,\n    userInfo: state => state.userInfo,\n    physicalInfo: state => state.physicalInfo,\n    slogan: state => state.slogan,\n    record: state => state.record,\n    workout: state => state.workout,\n    goals: state => state.goals,\n    profileImg: state => state.profileImg\n  }\n};","map":{"version":3,"names":["router","axios","swal","window","Swal","accounts","namespaced","state","LoginErr","isLoginErr","accessToken","refreshToken","signupInfo","signupErr","message","userInfo","nick","gender","age","height","weight","activityNum","activityHour","activityLevel","id","email","physicalInfo","bmi","bmr","caloriePerDay","image","record","point","exp","goals","profileImg","mutations","SET_SIGNUP_MSG","singupErr","SET_LOGIN_ERR","SET_ACCESS_TOKEN","token","SET_REFRESH_TOKEN","SET_USER_INFO","payload","atSignIndex","indexOf","emailNick","substr","SET_PHYSICAL_INFO","SET_SLOGAN","slogan","SET_PROFILE_IMG","SET_POINT","SET_GOAL","actions","saveAccessToken","commit","sessionStorage","setItem","saveRefreshToken","removeToken","removeItem","setUserInfo","login","dispatch","credentials","post","then","res","response","data","access","refresh","console","log","push","catch","err","status","fire","socialLogin","url","method","headers","logout","register","findPassword","header","passwordChg","fetchPhysicalInfo","setSlogan","fetchSlogan","updateSlogan","alert","updateUserInfo","setProfileImg","fetchProfileImg","URL","createObjectURL","updateProfileImg","fetchPoint","fetchCompete","fetchGoal","getters","isLogin","workout"],"sources":["C:/Users/multicampus/Desktop/새 폴더2/S07P12C202/frontend/owo/src/store/modules/accounts.js"],"sourcesContent":["import router from '@/router';\nimport axios from 'axios';\nimport swal from 'sweetalert2';\n\nwindow.Swal = swal;\n\n// eslint-disable-next-line\nexport const accounts = {\r\n  namespaced: true,\n  state: () => ({\n    LoginErr: '',\n    isLoginErr: false,\n    accessToken: null,\n    refreshToken: null,\n    signupInfo: {\n      signupErr: false,\n      message: '',\n    },\n    userInfo: {\n      nick: '',\n      gender: '',\n      age: '',\n      height: '',\n      weight: '',\n      activityNum: '',\n      activityHour: '',\n      activityLevel: '',\n      id: '',\n      email: '',\n    },\n    physicalInfo: {\n      bmi: null,\n      bmr: null,\n      caloriePerDay: null,\n    },\n    image: '',\n    record: {\n      point: '', // 경쟁\n      exp: '', // 자유, 영상 경험치\n    },\n    // compete: {\n    //   workout1: '', // 운동1 최고기록\n    //   workout2: '', // 운동2 최고기록\n    //   workout3: '', // 운동3 최고기록\n    // },\n    goals: '',\n    profileImg: '',\n  }),\n  mutations: {\n    SET_SIGNUP_MSG: (state, message) => {\n      state.signupInfo.message = message;\n      state.signupInfo.singupErr = true;\n    },\n    SET_LOGIN_ERR: (state, message) => {\n      state.LoginErr = message;\n      state.isLoginErr = true;\n    },\n    SET_ACCESS_TOKEN: (state, token) => {\n      state.accessToken = token;\n    },\n    SET_REFRESH_TOKEN: (state, token) => {\n      state.refreshToken = token;\n    },\n    SET_USER_INFO: (state, payload) => { // 로그인 시 반환되는 유저정보 state에 할당\n      state.userInfo.id = payload.id;\n      state.userInfo.email = payload.email;\n      state.userInfo.nick = payload.nick;\n      state.userInfo.gender = payload.gender;\n      state.userInfo.age = payload.age;\n      state.userInfo.height = payload.height;\n      state.userInfo.weight = payload.weight;\n      state.userInfo.activityNum = payload.activityNum;\n      state.userInfo.activityHour = payload.activityHour;\n      state.userInfo.activityLevel = payload.activityLevel;\n      if (state.userInfo.nick === '' || !state.userInfo.nick) {\n        const { email } = state.userInfo;\n        const atSignIndex = email.indexOf('@');\n        const emailNick = email.substr(0, atSignIndex);\n        state.userInfo.nick = emailNick;\n      }\n    },\n    SET_PHYSICAL_INFO: (state, payload) => {\n      state.physicalInfo.bmi = payload.bmi;\n      state.physicalInfo.bmr = payload.bmr;\n      state.physicalInfo.caloriePerDay = payload.caloriePerDay;\n    },\n    SET_SLOGAN: (state, payload) => {\n      state.slogan = payload;\n    },\n    SET_PROFILE_IMG: (state, payload) => {\n      state.image = payload;\n    },\n    SET_POINT: (state, payload) => {\n      state.record.point = payload;\n    },\n    // SET_COMPETE: (state, payload) => {\n    //   state.compete.workout1 = payload.workout1;\n    //   state.compete.workout2 = payload.workout2;\n    //   state.compete.workout3 = payload.workout3;\n    // },\n    SET_GOAL: (state, payload) => {\n      state.goals = payload;\n    },\n  },\n  actions: {\n    saveAccessToken({ commit }, token) {\n      sessionStorage.setItem('accessToken', token);\n      commit('SET_ACCESS_TOKEN', token);\n    },\n    saveRefreshToken({ commit }, token) {\n      sessionStorage.setItem('refreshToken', token); // 세션스토리지에 리프레시 토큰 저장\n      commit('SET_REFRESH_TOKEN', token); // state 할당\n    },\n    removeToken({ commit }) {\n      commit('SET_ACCESS_TOKEN', null);\n      commit('SET_REFRESH_TOKEN', null);\n      sessionStorage.removeItem('accessToken'); // accessToken 제거\n      sessionStorage.removeItem('refreshToken'); // refreshToken 제거\n      sessionStorage.removeItem('vuex'); // 사용자 정보 제거\n    },\n    setUserInfo({ commit }, payload) {\n      commit('SET_USER_INFO', payload);\n    },\n    login({ dispatch, commit }, credentials) { // 로그인\n      axios.post('https://i7c202.p.ssafy.io:8282/api/auth/login', credentials) //\n        .then((res) => {\n          const response = res.data.data;\n          const access = response.accessToken;\n          const refresh = response.refreshToken;\n          console.log(response);\n          dispatch('saveAccessToken', access);\n          dispatch('saveRefreshToken', refresh);\n          dispatch('setUserInfo', response);\n          dispatch('fetchPhysicalInfo');\n          dispatch('fetchSlogan');\n          dispatch('fetchPoint');\n          dispatch('fetchCompete');\n          dispatch('fetchGoal');\n          dispatch('fetchProfileImg');\n          router.push('/');\n        })\n        .catch((err) => {\n          if (err.response.status === 400) {\n            if (err.response.data.message === '회원가입 이메일 인증이 필요합니다.') {\n              commit('SET_LOGIN_ERR', err.response.data.message);\n              sessionStorage.removeItem('vuex');\n              swal.fire(\n                '#오운완',\n                '회원가입 이메일 인증이 필요합니다.',\n                'warning',\n              );\n            } else if (err.response.data.message === '이메일 혹은 비밀번호가 맞지 않습니다.') {\n              commit('SET_LOGIN_ERR', err.response.data.message);\n              sessionStorage.removeItem('vuex');\n              swal.fire(\n                '#오운완',\n                '이메일 혹은 비밀번호가 맞지 않습니다.',\n                'warning',\n              );\n            }\n          } else {\n            // commit('SET_LOGIN_ERR', err.response.data.message); // 서버 error\n            swal.fire(\n              '#오운완',\n              '서버 문제로 로그인에 실패하였습니다. 다시 시도해 주세요!',\n              'warning',\n            );\n          }\n        });\n    },\n    socialLogin({ commit }, token) {\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/social',\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': token,\n        },\n      })\n        .then((res) => {\n          console.log('소셜로그인 in vuex');\n          commit('SET_USER_INFO', res.data);\n          router.push('/');\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    logout({ state, dispatch }) { // 로그아웃\n      // eslint-disable-next-line\n      axios({\r\n        url: 'https://i7c202.p.ssafy.io:8282/api/logout',\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n      })\n        .then(() => {\n          dispatch('removeToken');\n          swal.fire(\n            '#오운완',\n            '로그아웃 성공!',\n            'success',\n          );\n          router.push('/');\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    register({ commit }, credentials) {\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/auth/join',\n        method: 'post',\n        data: credentials,\n      })\n        .then((res) => {\n          commit('SET_SIGNUP_MSG', res.data.message);\n          swal.fire(\n            '#오운완',\n            '회원가입 성공! 이메일 인증 후 로그인 해주세요!',\n            'success',\n          );\n          router.push('/login');\n        })\n        .catch((err) => {\n          if (err.response.data === 'OVERLAP') {\n            commit('SET_SIGNUP_MSG', err.response.data);\n            swal.fire(\n              '#오운완',\n              '이미 회원가입 된 이메일입니다.',\n              'warning',\n            );\n            router.push('/login');\n          } else {\n            commit('SET_SIGNUP_MSG', err.response.data);\n            swal.fire(\n              '#오운완',\n              '회원가입에 실패했습니다. 다시 시도해 주세요.',\n              'warning',\n            );\n          }\n        });\n    },\n    findPassword({ state }) { // 비밀번호 찾기\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/authpassword',\n        method: 'get',\n        header: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n        data: state.userInfo.email, // 사용자 이메일 데이터를 이용해서 password 찾기\n      })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    passwordChg({ state }, payload) { // 비밀번호 변경\n      axios({\n        url: '',\n        method: '',\n        header: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n        data: payload,\n      })\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    fetchPhysicalInfo({ state, commit }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/bmi/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n      })\n        .then((res) => {\n          console.log('운동분석 업데이트');\n          console.log(res.data.data);\n          commit('SET_PHYSICAL_INFO', res.data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    setSlogan({ commit }, payload) {\n      commit('SET_SLOGAN', payload);\n    },\n    fetchSlogan({ state, dispatch }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/slogan/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n      })\n        .then((res) => {\n          console.log(res.data);\n          dispatch('setSlogan', res.data.data.slogan);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    updateSlogan({ state, dispatch }, payload) {\n      console.log('axios 하기 전');\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/user/slogan',\n        method: 'put',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n        data: payload,\n      })\n        .then((res) => {\n          // console.log('res');\n          console.log(res.data.message);\n          dispatch('fetchSlogan');\n          alert('수정되었습니다.');\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    updateUserInfo({ state, dispatch }, payload) {\n      console.log(payload);\n      console.log('액시오스하기전');\n      axios({\n        url: 'https://i7c202.p.ssafy.io:8282/api/user',\n        method: 'put',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n        data: payload,\n      })\n        .then((res) => {\n          dispatch('setUserInfo', res.data.data);\n          dispatch('fetchPhysicalInfo');\n          alert('정보가 수정되었습니다.');\n          // router.push({ name: 'MyPageMainView' });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    setProfileImg({ commit }, payload) {\n      commit('SET_PROFILE_IMG', payload);\n    },\n    fetchProfileImg({ state, dispatch }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n        // responseType: 'blob',\n      })\n        .then((res) => {\n          // eslint-disable-next-line\n          // const url = window.URL.createObjectURL(new Blob([res.data], { type: res.headers['content-type'] }));\r\n          // console.log('이미지axios응답');\n          // console.log(res);\n          // console.log(res.data);\n          // console.log('응답 끝');\n          const url = URL.createObjectURL(res.data);\n          dispatch('setProfileImg', url);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    updateProfileImg({ state, dispatch }, payload) {\n      // console.log('이미지 업데이트 axios 하기 전');\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/img/${state.userInfo.id}`,\n        method: 'post',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n          // 'Content-Type': 'application/json',\n        },\n        data: payload,\n      })\n        .then((res) => {\n          // console.log('이미지 업데이트 res.data.data 보내기 전');\n          // console.log(res);\n          alert(res.data.message);\n          // console.log(payload);\n          dispatch('setProfileImg', res.data);\n          // dispatch('fetchProfileImg', res.data);  // 이미지 바꾸고 바로 페치하고싶은데, 이미지 바꾼 게 완료된 후 하고싶은데\n          // router.push({ name: 'MyPageMainView' });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    fetchPoint({ state, commit }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/point/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n      })\n        .then((res) => {\n          // console.log(res.data.message);\n          // console.log(res.data.data);\n          commit('SET_POINT', res.data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    fetchCompete({ state, commit }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/compete/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n      })\n        .then((res) => {\n          // console.log(res.data.message);\n          console.log(res.data.data);\n          commit('SET_COMPETE', res.data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    fetchGoal({ state, commit }) {\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/user/compete/${state.userInfo.id}`,\n        method: 'get',\n        headers: {\n          'X-AUTH-TOKEN': state.accessToken,\n          'REFRESH-TOKEN': state.refreshToken,\n        },\n      })\n        .then((res) => {\n          // console.log(res.data.message);\n          console.log(res.data.data);\n          commit('SET_GOAL', res.data.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n  getters: {\n    isLogin: (state) => !!state.accessToken,\n    userInfo: (state) => state.userInfo,\n    physicalInfo: (state) => state.physicalInfo,\n    slogan: (state) => state.slogan,\n    record: (state) => state.record,\n    workout: (state) => state.workout,\n    goals: (state) => state.goals,\n    profileImg: (state) => state.profileImg,\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}