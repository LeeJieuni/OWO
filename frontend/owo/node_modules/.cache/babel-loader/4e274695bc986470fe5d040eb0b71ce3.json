{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"emoji-mart-bar emoji-mart-bar-anchors\"\n};\nconst _hoisted_2 = {\n  id: \"emoji-mart-list\",\n  ref: \"scrollContent\",\n  role: \"listbox\",\n  \"aria-expanded\": \"true\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"emoji-mart-bar emoji-mart-bar-preview\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_anchors = _resolveComponent(\"anchors\");\n\n  const _component_search = _resolveComponent(\"search\");\n\n  const _component_category = _resolveComponent(\"category\");\n\n  const _component_preview = _resolveComponent(\"preview\");\n\n  return _openBlock(), _createElementBlock(\"section\", {\n    class: \"emoji-mart emoji-mart-static\",\n    style: _normalizeStyle($options.customStyles)\n  }, [_ctx.showCategories ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_anchors, {\n    data: $props.data,\n    i18n: $options.mergedI18n,\n    color: _ctx.color,\n    categories: $data.view.allCategories,\n    \"active-category\": $data.view.activeCategory,\n    onClick: $options.onAnchorClick\n  }, null, 8\n  /* PROPS */\n  , [\"data\", \"i18n\", \"color\", \"categories\", \"active-category\", \"onClick\"])])) : _createCommentVNode(\"v-if\", true), _renderSlot(_ctx.$slots, \"searchTemplate\", {\n    data: $props.data,\n    i18n: _ctx.i18n,\n    autoFocus: _ctx.autoFocus,\n    onSearch: $options.onSearch\n  }, () => [_ctx.showSearch ? (_openBlock(), _createBlock(_component_search, {\n    key: 0,\n    ref: \"search\",\n    data: $props.data,\n    i18n: $options.mergedI18n,\n    \"auto-focus\": _ctx.autoFocus,\n    \"on-search\": $options.onSearch,\n    onSearch: $options.onSearch,\n    onArrowLeft: $options.onArrowLeft,\n    onArrowRight: $options.onArrowRight,\n    onArrowDown: $options.onArrowDown,\n    onArrowUp: $options.onArrowUp,\n    onEnter: $options.onEnter\n  }, null, 8\n  /* PROPS */\n  , [\"data\", \"i18n\", \"auto-focus\", \"on-search\", \"onSearch\", \"onArrowLeft\", \"onArrowRight\", \"onArrowDown\", \"onArrowUp\", \"onEnter\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n    role: \"tabpanel\",\n    class: \"emoji-mart-scroll\",\n    ref: \"scroll\",\n    onScroll: _cache[0] || (_cache[0] = (...args) => $options.onScroll && $options.onScroll(...args))\n  }, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.view.filteredCategories, (category, idx) => {\n    return _withDirectives((_openBlock(), _createBlock(_component_category, {\n      ref_for: true,\n      ref: 'categories_' + idx,\n      key: category.id,\n      data: $props.data,\n      i18n: $options.mergedI18n,\n      id: category.id,\n      name: category.name,\n      emojis: category.emojis,\n      \"emoji-props\": $options.emojiProps\n    }, null, 8\n    /* PROPS */\n    , [\"data\", \"i18n\", \"id\", \"name\", \"emojis\", \"emoji-props\"])), [[_vShow, _ctx.infiniteScroll || category == $data.view.activeCategory]]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 512\n  /* NEED_PATCH */\n  )], 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), _renderSlot(_ctx.$slots, \"previewTemplate\", {\n    data: $props.data,\n    title: _ctx.title,\n    emoji: $data.view.previewEmoji,\n    idleEmoji: $options.idleEmoji,\n    showSkinTones: _ctx.showSkinTones,\n    emojiProps: $options.emojiProps,\n    skinProps: $options.skinProps,\n    onSkinChange: $options.onSkinChange\n  }, () => [_ctx.showPreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_preview, {\n    data: $props.data,\n    title: _ctx.title,\n    emoji: $data.view.previewEmoji,\n    \"idle-emoji\": $options.idleEmoji,\n    \"show-skin-tones\": _ctx.showSkinTones,\n    \"emoji-props\": $options.emojiProps,\n    \"skin-props\": $options.skinProps,\n    \"on-skin-change\": $options.onSkinChange\n  }, null, 8\n  /* PROPS */\n  , [\"data\", \"title\", \"emoji\", \"idle-emoji\", \"show-skin-tones\", \"emoji-props\", \"skin-props\", \"on-skin-change\"])])) : _createCommentVNode(\"v-if\", true)])], 4\n  /* STYLE */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","id","ref","role","_createElementBlock","style","$options","_ctx","_createVNode","_component_anchors","data","$props","i18n","color","categories","$data","allCategories","activeCategory","onClick","_renderSlot","autoFocus","onSearch","_createBlock","_component_search","onArrowLeft","onArrowRight","onArrowDown","onArrowUp","onEnter","_createElementVNode","onScroll","_Fragment","_renderList","filteredCategories","category","idx","_component_category","key","name","emojis","title","emoji","previewEmoji","idleEmoji","showSkinTones","emojiProps","skinProps","onSkinChange","_component_preview"],"sourceRoot":"","sources":["C:\\Users\\multicampus\\Desktop\\새 폴더2\\S07P12C202\\frontend\\owo\\node_modules\\emoji-mart-vue-fast\\src\\components\\Picker.vue"],"sourcesContent":["<template>\n  <section class=\"emoji-mart emoji-mart-static\" :style=\"customStyles\">\n    <div class=\"emoji-mart-bar emoji-mart-bar-anchors\" v-if=\"showCategories\">\n      <anchors\n        :data=\"data\"\n        :i18n=\"mergedI18n\"\n        :color=\"color\"\n        :categories=\"view.allCategories\"\n        :active-category=\"view.activeCategory\"\n        @click=\"onAnchorClick\"\n      />\n    </div>\n\n    <slot\n      name=\"searchTemplate\"\n      :data=\"data\"\n      :i18n=\"i18n\"\n      :auto-focus=\"autoFocus\"\n      :on-search=\"onSearch\"\n    >\n      <search\n        v-if=\"showSearch\"\n        ref=\"search\"\n        :data=\"data\"\n        :i18n=\"mergedI18n\"\n        :auto-focus=\"autoFocus\"\n        :on-search=\"onSearch\"\n        @search=\"onSearch\"\n        @arrowLeft=\"onArrowLeft\"\n        @arrowRight=\"onArrowRight\"\n        @arrowDown=\"onArrowDown\"\n        @arrowUp=\"onArrowUp\"\n        @enter=\"onEnter\"\n      />\n    </slot>\n\n    <div\n      role=\"tabpanel\"\n      class=\"emoji-mart-scroll\"\n      ref=\"scroll\"\n      @scroll=\"onScroll\"\n    >\n      <div\n        id=\"emoji-mart-list\"\n        ref=\"scrollContent\"\n        role=\"listbox\"\n        aria-expanded=\"true\"\n      >\n        <category\n          v-for=\"(category, idx) in view.filteredCategories\"\n          v-show=\"infiniteScroll || category == view.activeCategory\"\n          :ref=\"'categories_' + idx\"\n          :key=\"category.id\"\n          :data=\"data\"\n          :i18n=\"mergedI18n\"\n          :id=\"category.id\"\n          :name=\"category.name\"\n          :emojis=\"category.emojis\"\n          :emoji-props=\"emojiProps\"\n        />\n      </div>\n    </div>\n\n    <slot\n      name=\"previewTemplate\"\n      :data=\"data\"\n      :title=\"title\"\n      :emoji=\"view.previewEmoji\"\n      :idle-emoji=\"idleEmoji\"\n      :show-skin-tones=\"showSkinTones\"\n      :emoji-props=\"emojiProps\"\n      :skin-props=\"skinProps\"\n      :on-skin-change=\"onSkinChange\"\n    >\n      <div class=\"emoji-mart-bar emoji-mart-bar-preview\" v-if=\"showPreview\">\n        <preview\n          :data=\"data\"\n          :title=\"title\"\n          :emoji=\"view.previewEmoji\"\n          :idle-emoji=\"idleEmoji\"\n          :show-skin-tones=\"showSkinTones\"\n          :emoji-props=\"emojiProps\"\n          :skin-props=\"skinProps\"\n          :on-skin-change=\"onSkinChange\"\n        />\n      </div>\n    </slot>\n  </section>\n</template>\n\n<script>\nimport '../vendor/raf-polyfill'\nimport store from '../utils/store'\nimport frequently from '../utils/frequently'\nimport { deepMerge, measureScrollbar } from '../utils'\nimport { PickerProps } from '../utils/shared-props'\nimport { PickerView } from '../utils/picker'\nimport Anchors from './anchors.vue'\nimport Category from './category.vue'\nimport Preview from './preview.vue'\nimport Search from './search.vue'\n\nconst I18N = {\n  search: 'Search',\n  notfound: 'No Emoji Found',\n  categories: {\n    search: 'Search Results',\n    recent: 'Frequently Used',\n    smileys: 'Smileys & Emotion',\n    people: 'People & Body',\n    nature: 'Animals & Nature',\n    foods: 'Food & Drink',\n    activity: 'Activity',\n    places: 'Travel & Places',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags',\n    custom: 'Custom',\n  },\n}\n\nexport default {\n  props: {\n    ...PickerProps,\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      activeSkin: this.skin || store.get('skin') || this.defaultSkin,\n      view: new PickerView(this),\n    }\n  },\n  computed: {\n    customStyles() {\n      return {\n        width: this.calculateWidth + 'px',\n        ...this.pickerStyles,\n      }\n    },\n    emojiProps() {\n      return {\n        native: this.native,\n        skin: this.activeSkin,\n        set: this.set,\n        emojiTooltip: this.emojiTooltip,\n        emojiSize: this.emojiSize,\n        selectedEmoji: this.view.previewEmoji,\n        selectedEmojiCategory: this.view.previewEmojiCategory,\n        onEnter: this.onEmojiEnter.bind(this),\n        onLeave: this.onEmojiLeave.bind(this),\n        onClick: this.onEmojiClick.bind(this),\n      }\n    },\n    skinProps() {\n      return {\n        skin: this.activeSkin,\n      }\n    },\n    calculateWidth() {\n      return this.perLine * (this.emojiSize + 12) + 12 + 2 + measureScrollbar()\n    },\n    // emojisPerRow() {\n    //   const listEl = this.$refs.scrollContent\n    //   const emojiEl = listEl.querySelector('.emoji-mart-emoji')\n    //   return Math.floor(listEl.offsetWidth / emojiEl.offsetWidth)\n    // },\n    filteredCategories() {\n      return this.view.filteredCategories\n    },\n    mergedI18n() {\n      return Object.freeze(deepMerge(I18N, this.i18n))\n    },\n    idleEmoji() {\n      try {\n        return this.data.emoji(this.emoji)\n      } catch (e) {\n        console.error(\n          'Default preview emoji `' +\n            this.emoji +\n            '` is not available, check the Picker `emoji` property',\n        )\n        console.error(e)\n        return this.data.firstEmoji()\n      }\n    },\n  },\n  methods: {\n    onScroll() {\n      if (this.infiniteScroll && !this.waitingForPaint) {\n        this.waitingForPaint = true\n        window.requestAnimationFrame(this.onScrollPaint.bind(this))\n      }\n    },\n    onScrollPaint() {\n      this.waitingForPaint = false\n      this.view.onScroll()\n    },\n    onAnchorClick(category) {\n      this.view.onAnchorClick(category)\n    },\n    onSearch(value) {\n      this.view.onSearch(value)\n    },\n    onEmojiEnter(emoji) {\n      this.view.onEmojiEnter(emoji)\n    },\n    onEmojiLeave(emoji) {\n      this.view.onEmojiLeave(emoji)\n    },\n    onArrowLeft($event) {\n      const oldIdx = this.view.previewEmojiIdx\n      this.view.onArrowLeft()\n      if ($event && this.view.previewEmojiIdx !== oldIdx) {\n        // Prevent cursor movement inside the input\n        $event.preventDefault()\n      }\n    },\n    onArrowRight() {\n      this.view.onArrowRight()\n    },\n    onArrowDown() {\n      this.view.onArrowDown()\n    },\n    onArrowUp($event) {\n      this.view.onArrowUp()\n      // Prevent cursor movement inside the input\n      $event.preventDefault()\n    },\n    onEnter(emoji) {\n      this.$emit('select', this.view.previewEmoji)\n      frequently.add(this.view.previewEmoji)\n    },\n    onEmojiClick(emoji) {\n      this.$emit('select', emoji)\n      frequently.add(emoji)\n    },\n    onSkinChange(skin) {\n      this.activeSkin = skin\n      store.update({ skin })\n\n      this.$emit('skin-change', skin)\n    },\n    getCategoryComponent(index) {\n      let component = this.$refs['categories_' + index]\n      if (component && '0' in component) {\n        // Vue 2 has $refs under v-for as an array.\n        return component['0']\n      }\n      // Vue 3 does not support $refs as array.\n      return component\n    },\n  },\n  components: {\n    Anchors,\n    Category,\n    Preview,\n    Search,\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}