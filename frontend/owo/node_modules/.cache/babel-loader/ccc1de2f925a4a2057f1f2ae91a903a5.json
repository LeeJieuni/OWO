{"ast":null,"code":"import { EmojiView } from '../utils/emoji-data';\nimport Emoji from './Emoji.vue';\nexport default {\n  props: {\n    data: {\n      type: Object,\n      required: true\n    },\n    i18n: {\n      type: Object,\n      required: true\n    },\n    id: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    emojis: {\n      type: Array\n    },\n    emojiProps: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    activeClass: function (emojiObject) {\n      if (!this.emojiProps.selectedEmoji) {\n        return '';\n      }\n\n      if (!this.emojiProps.selectedEmojiCategory) {\n        return '';\n      }\n\n      if (this.emojiProps.selectedEmoji.id == emojiObject.id && this.emojiProps.selectedEmojiCategory.id == this.id) {\n        return 'emoji-mart-emoji-selected';\n      }\n\n      return '';\n    }\n  },\n  computed: {\n    isVisible() {\n      return !!this.emojis;\n    },\n\n    isSearch() {\n      return this.name == 'Search';\n    },\n\n    hasResults() {\n      return this.emojis.length > 0;\n    },\n\n    emojiObjects() {\n      return this.emojis.map(emoji => {\n        let emojiObject = emoji;\n        let emojiView = new EmojiView(emoji, this.emojiProps.skin, this.emojiProps.set, this.emojiProps.native, this.emojiProps.fallback, this.emojiProps.emojiTooltip, this.emojiProps.emojiSize);\n        return {\n          emojiObject,\n          emojiView\n        };\n      });\n    }\n\n  },\n  components: {\n    Emoji\n  }\n};","map":{"version":3,"mappings":"AAmDA,SAASA,SAAT,QAA0B,qBAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,eAAe;EACbC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MADF;MAEJC,QAAQ,EAAE;IAFN,CADD;IAKLC,IAAI,EAAE;MACJH,IAAI,EAAEC,MADF;MAEJC,QAAQ,EAAE;IAFN,CALD;IASLE,EAAE,EAAE;MACFJ,IAAI,EAAEK,MADJ;MAEFH,QAAQ,EAAE;IAFR,CATC;IAaLI,IAAI,EAAE;MACJN,IAAI,EAAEK,MADF;MAEJH,QAAQ,EAAE;IAFN,CAbD;IAiBLK,MAAM,EAAE;MACNP,IAAI,EAAEQ;IADA,CAjBH;IAoBLC,UAAU,EAAE;MACVT,IAAI,EAAEC,MADI;MAEVC,QAAQ,EAAE;IAFA;EApBP,CADM;EA0BbQ,OAAO,EAAE;IACPC,WAAW,EAAE,UAASC,WAAT,EAAsB;MACjC,IAAI,CAAC,KAAKH,UAAL,CAAgBI,aAArB,EAAoC;QAClC,OAAO,EAAP;MACF;;MACA,IAAI,CAAC,KAAKJ,UAAL,CAAgBK,qBAArB,EAA4C;QAC1C,OAAO,EAAP;MACF;;MACA,IACE,KAAKL,UAAL,CAAgBI,aAAhB,CAA8BT,EAA9B,IAAoCQ,WAAW,CAACR,EAAhD,IACA,KAAKK,UAAL,CAAgBK,qBAAhB,CAAsCV,EAAtC,IAA4C,KAAKA,EAFnD,EAGE;QACA,OAAO,2BAAP;MACF;;MACA,OAAO,EAAP;IACD;EAfM,CA1BI;EA2CbW,QAAQ,EAAE;IACRC,SAAS,GAAG;MACV,OAAO,CAAC,CAAC,KAAKT,MAAd;IACD,CAHO;;IAIRU,QAAQ,GAAG;MACT,OAAO,KAAKX,IAAL,IAAa,QAApB;IACD,CANO;;IAORY,UAAU,GAAG;MACX,OAAO,KAAKX,MAAL,CAAYY,MAAZ,GAAqB,CAA5B;IACD,CATO;;IAURC,YAAY,GAAG;MACb,OAAO,KAAKb,MAAL,CAAYc,GAAZ,CAAiBC,KAAD,IAAW;QAChC,IAAIV,WAAU,GAAIU,KAAlB;QACA,IAAIC,SAAQ,GAAI,IAAI3B,SAAJ,CACd0B,KADc,EAEd,KAAKb,UAAL,CAAgBe,IAFF,EAGd,KAAKf,UAAL,CAAgBgB,GAHF,EAId,KAAKhB,UAAL,CAAgBiB,MAJF,EAKd,KAAKjB,UAAL,CAAgBkB,QALF,EAMd,KAAKlB,UAAL,CAAgBmB,YANF,EAOd,KAAKnB,UAAL,CAAgBoB,SAPF,CAAhB;QASA,OAAO;UAAEjB,WAAF;UAAeW;QAAf,CAAP;MACD,CAZM,CAAP;IAaD;;EAxBO,CA3CG;EAqEbO,UAAU,EAAE;IACVjC;EADU;AArEC,CAAf","names":["EmojiView","Emoji","props","data","type","Object","required","i18n","id","String","name","emojis","Array","emojiProps","methods","activeClass","emojiObject","selectedEmoji","selectedEmojiCategory","computed","isVisible","isSearch","hasResults","length","emojiObjects","map","emoji","emojiView","skin","set","native","fallback","emojiTooltip","emojiSize","components"],"sourceRoot":"","sources":["C:\\Users\\multicampus\\Desktop\\새 폴더2\\S07P12C202\\frontend\\owo\\node_modules\\emoji-mart-vue-fast\\src\\components\\category.vue"],"sourcesContent":["<template>\n  <section\n    :class=\"{\n      'emoji-mart-category': true,\n      'emoji-mart-no-results': !hasResults,\n    }\"\n    :aria-label=\"i18n.categories[id]\"\n    v-if=\"isVisible && (isSearch || hasResults)\"\n  >\n    <div class=\"emoji-mart-category-label\">\n      <h3 class=\"emoji-mart-category-label\">{{ i18n.categories[id] }}</h3>\n    </div>\n\n    <template v-for=\"{ emojiObject, emojiView } in emojiObjects\">\n      <button\n        v-if=\"emojiView.canRender\"\n        :aria-label=\"emojiView.ariaLabel\"\n        role=\"option\"\n        aria-selected=\"false\"\n        aria-posinset=\"1\"\n        aria-setsize=\"1812\"\n        type=\"button\"\n        :data-title=\"emojiObject.short_name\"\n        :key=\"emojiObject.id\"\n        :title=\"emojiView.title\"\n        class=\"emoji-mart-emoji\"\n        :class=\"activeClass(emojiObject)\"\n        @mouseenter=\"emojiProps.onEnter(emojiView.getEmoji())\"\n        @mouseleave=\"emojiProps.onLeave(emojiView.getEmoji())\"\n        @click=\"emojiProps.onClick(emojiView.getEmoji())\"\n      >\n        <span :class=\"emojiView.cssClass\" :style=\"emojiView.cssStyle\">{{\n          emojiView.content\n        }}</span>\n      </button>\n    </template>\n\n    <div v-if=\"!hasResults\">\n      <emoji\n        :data=\"data\"\n        emoji=\"sleuth_or_spy\"\n        :native=\"emojiProps.native\"\n        :skin=\"emojiProps.skin\"\n        :set=\"emojiProps.set\"\n      />\n      <div class=\"emoji-mart-no-results-label\">{{ i18n.notfound }}</div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { EmojiView } from '../utils/emoji-data'\nimport Emoji from './Emoji.vue'\n\nexport default {\n  props: {\n    data: {\n      type: Object,\n      required: true,\n    },\n    i18n: {\n      type: Object,\n      required: true,\n    },\n    id: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    emojis: {\n      type: Array,\n    },\n    emojiProps: {\n      type: Object,\n      required: true,\n    },\n  },\n  methods: {\n    activeClass: function(emojiObject) {\n      if (!this.emojiProps.selectedEmoji) {\n        return ''\n      }\n      if (!this.emojiProps.selectedEmojiCategory) {\n        return ''\n      }\n      if (\n        this.emojiProps.selectedEmoji.id == emojiObject.id &&\n        this.emojiProps.selectedEmojiCategory.id == this.id\n      ) {\n        return 'emoji-mart-emoji-selected'\n      }\n      return ''\n    },\n  },\n  computed: {\n    isVisible() {\n      return !!this.emojis\n    },\n    isSearch() {\n      return this.name == 'Search'\n    },\n    hasResults() {\n      return this.emojis.length > 0\n    },\n    emojiObjects() {\n      return this.emojis.map((emoji) => {\n        let emojiObject = emoji\n        let emojiView = new EmojiView(\n          emoji,\n          this.emojiProps.skin,\n          this.emojiProps.set,\n          this.emojiProps.native,\n          this.emojiProps.fallback,\n          this.emojiProps.emojiTooltip,\n          this.emojiProps.emojiSize,\n        )\n        return { emojiObject, emojiView }\n      })\n    },\n  },\n  components: {\n    Emoji,\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}