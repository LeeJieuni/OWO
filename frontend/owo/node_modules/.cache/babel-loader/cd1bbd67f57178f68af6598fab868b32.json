{"ast":null,"code":"import MySidebar from '@/components/MyPage/MySidebar.vue';\nimport { useStore } from 'vuex';\nimport { computed, reactive } from 'vue'; // import multer from\n\nexport default {\n  name: 'MyPage',\n  components: {\n    MySidebar\n  },\n\n  setup() {\n    const store = useStore();\n    store.dispatch('record/fetchSessions');\n    store.dispatch('record/fetchPercentage');\n    const slogan = computed(() => store.getters['accounts/slogan']);\n    const user = computed(() => store.getters['accounts/userInfo']);\n    const state = reactive({\n      sloganData: {\n        id: user.value.id,\n        slogan: slogan.value\n      },\n      preloadImgUrl: '' // imgFormData: '',\n\n    }); // action\n\n    const updateSlogan = function (e) {\n      e.preventDefault();\n      console.log('보낸다');\n      console.log(this.state.sloganData);\n      store.dispatch('accounts/updateSlogan', this.state.sloganData);\n    };\n\n    const fetchPercentage = function () {\n      store.dispatch('record/fetchPercentage');\n    }; // Methods\n\n\n    const updateProfileImg = e => {\n      e.preventDefault();\n      const img2 = document.querySelector('.input-image'); // console.log('이미지 불러오기');\n      // console.log(e.target.files[0]);\n      // const img = e.target.files[0];\n\n      const formData = new FormData(); // const imgFile = {\n      // }\n\n      formData.append('file', img2.files[0]);\n      formData.append('file', new Blob([JSON.stringify(img2)], {\n        type: 'image/*'\n      })); // console.log(state.imgFormData);\n\n      store.dispatch('accounts/updateProfileImg', formData);\n    };\n\n    const uploadProfileImg = e => {\n      // const img2 = document.querySelector('.input-image');\n      // const modal = document.querySelector('.modal');\n      e.preventDefault(); // const multer = require('multer');\n      // const path = require('path');\n\n      console.log('이미지 불러오기');\n      let img = e.target.files[0]; // console.log(img);\n      // console.log(img2.files[0]);\n\n      console.log('파일사이즈 검사');\n\n      if (img.size > 2 * 1024 * 1024) {\n        alert('파일 사이즈가 2mb를 넘습니다.');\n        img = null;\n      } else {\n        console.log('처리 후');\n        state.preloadImgUrl = URL.createObjectURL(img);\n        this.imgFormData.append('file', img);\n      } // const formData = new FormData();\n      // const imgFile = {\n      // }\n      // formData.append('file', img);\n      // store.dispatch('accounts/updateProfileImg', formData);\n      // const formData = new FormData();\n      // formData.append('name', img.name);\n      // const imgFile = {\n      // }\n      // formData.append('file', img);\n      // formData.append('user_id', user.value.id);\n      // formData.append('date', new Date());\n      // console.log(formData);\n      // eslint-disable-next-line\n      // formData.append('file', new Blob([JSON.stringify(state.data)], { type: 'application/json' }));\n      // formData.append('file', new Blob([img], { type: 'application/octet-stream' });, img.name);\n      // formData.append('file', new Blob([img], { type: `${img.type}` }), img.name);\n      // for (let i; i < formData.length; i += 1) {\n      // // console.log(formData[i]);\n      // }\n      // console.log(formData);\n      // // eslint-disable-next-line\n      // store.dispatch('accounts/updateProfileImg', formData);\n\n    };\n\n    return {\n      slogan,\n      state,\n      updateSlogan,\n      uploadProfileImg,\n      updateProfileImg,\n      fetchPercentage,\n      user\n    };\n  },\n\n  created() {},\n\n  mounted() {},\n\n  unmounted() {} // methods: {\n  // sloganput(e) {\n  //   this.slogan = e.target.value;\n  // },\n  // },\n\n\n};","map":{"version":3,"mappings":"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","names":["MySidebar","useStore","computed","reactive","name","components","setup","store","dispatch","slogan","getters","user","state","sloganData","id","value","preloadImgUrl","updateSlogan","e","preventDefault","console","log","fetchPercentage","updateProfileImg","img2","document","querySelector","formData","FormData","append","files","Blob","JSON","stringify","type","uploadProfileImg","img","target","size","alert","URL","createObjectURL","imgFormData","created","mounted","unmounted"],"sourceRoot":"","sources":["C:\\Users\\multicampus\\Desktop\\새 폴더2\\S07P12C202\\frontend\\owo\\src\\views\\MyPage\\MyPageView.vue"],"sourcesContent":["<template>\n  <div class=\"mypageview\">\n    <b-modal id=\"image-upload\" size=\"md\" hide-footer hide-header centered>\n      <div>\n        <h3 class=\"modal-title text-center mt-4\">프로필 이미지 업로드📷</h3>\n        <div class=\"wrapper\">\n          <div class=\"container\">\n            <div class=\"row row-cols-3\">\n              <div class=\"img-wrapper\">\n                <img\n                  class=\"profile-img\"\n                  :src=\"state.preloadImgUrl\"\n                  alt=\"프로필이미지\"\n                >\n              </div>\n              <form enctype=\"multipart/form-data\" imgFormData>\n              <label for=\"profileImag\">\n                <input class=\"input-image\" accept=\"image/*\" type=\"file\"\n                  ref=\"profileImg\" @change.prevent=\"uploadProfileImg($event)\" id=\"profileImg\">\n              </label>\n              <div class=\"d-flex justify-content-center\">\n                <button on @click=\"updateProfileImg($event)\"\n                  class=\"btn btn-primary\" form=\"imageUploadForm\" >작성</button>\n              </div>\n              <!-- <button type=\"submit\" class=\"btn btn-outline-primary\"\n                @click.prevent=\"updateProfileImg($event)\" for=\"imageUploadForm\">이미지 보내기</button> -->\n            </form>\n            </div>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-center\">\n          <button on @click=\"updateProfileImg($event)\"\n            class=\"btn btn-primary\" form=\"imageUploadForm\">작성</button>\n        </div>\n      </div>\n    </b-modal>\n\n    <!-- <div class=\"background-box\"> -->\n      <div class=\"front-box row\">\n        <div class=\"mypageContainer row\">\n          <div class=\"col-3 sidebar m-0 p-0\">\n            <MySidebar/>\n          </div>\n          <div class=\"col-9 m-0 p-0\">\n            <div class=\"title text-center\">\n              <h4>{{slogan}}</h4>\n              <form action=\"\">\n                <label for=\"slogan\">\n                  <input type=\"text\" id=\"slogan\" v-model=\"state.sloganData.slogan\">\n                  <!-- {{ state.sloganData.slogan }} -->\n                </label>\n                <button @click.prevent=\"updateSlogan($event)\">변경</button>\n              </form>\n            </div>\n            <div>\n              <router-view></router-view>\n            </div>\n          </div>\n        </div>\n      </div>\n    <!-- </div> -->\n  </div>\n</template>\n\n<script>\nimport MySidebar from '@/components/MyPage/MySidebar.vue';\nimport { useStore } from 'vuex';\nimport { computed, reactive } from 'vue';\n// import multer from\n\nexport default {\n  name: 'MyPage',\n  components: { MySidebar },\n  setup() {\n    const store = useStore();\n    store.dispatch('record/fetchSessions');\n    store.dispatch('record/fetchPercentage');\n    const slogan = computed(() => store.getters['accounts/slogan']);\n    const user = computed(() => store.getters['accounts/userInfo']);\n\n    const state = reactive({\n      sloganData: {\n        id: user.value.id,\n        slogan: slogan.value,\n      },\n      preloadImgUrl: '',\n      // imgFormData: '',\n    });\n\n    // action\n    const updateSlogan = function (e) {\n      e.preventDefault();\n      console.log('보낸다');\n      console.log(this.state.sloganData);\n      store.dispatch('accounts/updateSlogan', this.state.sloganData);\n    };\n    const fetchPercentage = function () {\n      store.dispatch('record/fetchPercentage');\n    };\n\n    // Methods\n    const updateProfileImg = (e) => {\n      e.preventDefault();\n      const img2 = document.querySelector('.input-image');\n      // console.log('이미지 불러오기');\n      // console.log(e.target.files[0]);\n      // const img = e.target.files[0];\n      const formData = new FormData();\n      // const imgFile = {\n      // }\n      formData.append('file', img2.files[0]);\n      formData.append('file', new Blob([JSON.stringify(img2)], { type: 'image/*' }));\n      // console.log(state.imgFormData);\n      store.dispatch('accounts/updateProfileImg', formData);\n    };\n    const uploadProfileImg = (e) => {\n      // const img2 = document.querySelector('.input-image');\n      // const modal = document.querySelector('.modal');\n      e.preventDefault();\n      // const multer = require('multer');\n      // const path = require('path');\n      console.log('이미지 불러오기');\n      let img = e.target.files[0];\n      // console.log(img);\n      // console.log(img2.files[0]);\n      console.log('파일사이즈 검사');\n      if (img.size > (2 * 1024 * 1024)) {\n        alert('파일 사이즈가 2mb를 넘습니다.');\n        img = null;\n      } else {\n        console.log('처리 후');\n        state.preloadImgUrl = URL.createObjectURL(img);\n        this.imgFormData.append('file', img);\n      }\n      // const formData = new FormData();\n      // const imgFile = {\n      // }\n      // formData.append('file', img);\n      // store.dispatch('accounts/updateProfileImg', formData);\n      // const formData = new FormData();\n      // formData.append('name', img.name);\n      // const imgFile = {\n\n      // }\n      // formData.append('file', img);\n      // formData.append('user_id', user.value.id);\n      // formData.append('date', new Date());\n      // console.log(formData);\n      // eslint-disable-next-line\n      // formData.append('file', new Blob([JSON.stringify(state.data)], { type: 'application/json' }));\r\n      // formData.append('file', new Blob([img], { type: 'application/octet-stream' });, img.name);\n      // formData.append('file', new Blob([img], { type: `${img.type}` }), img.name);\n      // for (let i; i < formData.length; i += 1) {\n      // // console.log(formData[i]);\n      // }\n      // console.log(formData);\n      // // eslint-disable-next-line\n\n      // store.dispatch('accounts/updateProfileImg', formData);\n    };\n\n    return {\n      slogan,\n      state,\n      updateSlogan,\n      uploadProfileImg,\n      updateProfileImg,\n      fetchPercentage,\n      user,\n    };\n  },\n  created() {\n  },\n  mounted() {},\n  unmounted() {},\n  // methods: {\n  // sloganput(e) {\n  //   this.slogan = e.target.value;\n  // },\n  // },\n};\n</script>\n\n<style scoped>\n  a {\n    text-decoration: none;\n  }\n  .img-wrapper {\n    position: relative;\n    width: 150px;\n    height: 150px;\n  }\n  .img-wrapper img {\n    border-radius: 50%;\n    /* margin: 0 auto; */\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(50, 50);\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    margin: auto;\n  }\n  .mypageview {\n    text-align: center;\n    color: black;\n  }\n  h1, h2, h3, h4, h5 {\n    font-weight: 900;\n  }\n  .mypageContainer {\n    font-weight: 600;\n    /* text-shadow: #7b7b7b 1px 1px; */\n    max-width: 900px;\n    margin: 0 auto;\n    background-color: white;\n    text-align: center;\n    border: solid #DFDFDF 1px;\n    box-sizing: border-box;\n    border-radius: 20px;\n    height: 100%;\n    box-shadow: rgb(105, 105, 105) 3px 3px 10px;\n    opacity: 93%;\n    /* padding: 35px; */\n    margin-bottom: 100px;\n    padding: 0;\n  }\n  .title {\n    border-bottom: solid #DFDFDF 1px;\n    font-weight: 800;\n    margin-top: 10px;\n    height: 100px;\n    padding: 30px;\n  }\n/*\n  .background-box {\n    width: 100vw;\n    height: 500px;\n    background-image: url(\"https://i.pinimg.com/originals/07/7e/a6/077ea6de7db29b564b4335dfd2ba7c15.jpg\");\n    background-size: 100vh;\n    position: relative;\n} */\n  .front-box {\n    position: relative;\n    padding-top: 100px;\n    backdrop-filter: blur(6px);\n  }\n  .sidebar {\n    border-right: solid 1px #DFDFDF;\n  }\n\n  .container {\n    height: 100%;\n  }\n  button:not(.btn) {\n    border: none;\n    background-color: white;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}