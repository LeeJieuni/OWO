{"ast":null,"code":"export default {\n  props: {\n    data: {\n      type: Object,\n      required: true\n    },\n    i18n: {\n      type: Object,\n      required: true\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false\n    },\n    onSearch: {\n      type: Function,\n      required: true\n    },\n    onArrowLeft: {\n      type: Function,\n      required: false\n    },\n    onArrowRight: {\n      type: Function,\n      required: false\n    },\n    onArrowDown: {\n      type: Function,\n      required: false\n    },\n    onArrowUp: {\n      type: Function,\n      required: false\n    },\n    onEnter: {\n      type: Function,\n      required: false\n    }\n  },\n\n  data() {\n    return {\n      value: ''\n    };\n  },\n\n  computed: {\n    emojiIndex() {\n      return this.data;\n    }\n\n  },\n  watch: {\n    value() {\n      this.$emit('search', this.value);\n    }\n\n  },\n  methods: {\n    clear() {\n      this.value = '';\n    }\n\n  },\n\n  mounted() {\n    let $input = this.$el.querySelector('input');\n\n    if (this.autoFocus) {\n      $input.focus();\n    }\n  }\n\n};","map":{"version":3,"mappings":"AAyBA,eAAe;EACbA,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,MADF;MAEJC,QAAQ,EAAE;IAFN,CADD;IAKLC,IAAI,EAAE;MACJH,IAAI,EAAEC,MADF;MAEJC,QAAQ,EAAE;IAFN,CALD;IASLE,SAAS,EAAE;MACTJ,IAAI,EAAEK,OADG;MAETC,OAAO,EAAE;IAFA,CATN;IAaLC,QAAQ,EAAE;MACRP,IAAI,EAAEQ,QADE;MAERN,QAAQ,EAAE;IAFF,CAbL;IAiBLO,WAAW,EAAE;MACXT,IAAI,EAAEQ,QADK;MAEXN,QAAQ,EAAE;IAFC,CAjBR;IAqBLQ,YAAY,EAAE;MACZV,IAAI,EAAEQ,QADM;MAEZN,QAAQ,EAAE;IAFE,CArBT;IAyBLS,WAAW,EAAE;MACXX,IAAI,EAAEQ,QADK;MAEXN,QAAQ,EAAE;IAFC,CAzBR;IA6BLU,SAAS,EAAE;MACTZ,IAAI,EAAEQ,QADG;MAETN,QAAQ,EAAE;IAFD,CA7BN;IAiCLW,OAAO,EAAE;MACPb,IAAI,EAAEQ,QADC;MAEPN,QAAQ,EAAE;IAFH;EAjCJ,CADM;;EAuCbH,IAAI,GAAG;IACL,OAAO;MACLe,KAAK,EAAE;IADF,CAAP;EAGD,CA3CY;;EA4CbC,QAAQ,EAAE;IACRC,UAAU,GAAG;MACX,OAAO,KAAKjB,IAAZ;IACD;;EAHO,CA5CG;EAiDbkB,KAAK,EAAE;IACLH,KAAK,GAAG;MACN,KAAKI,KAAL,CAAW,QAAX,EAAqB,KAAKJ,KAA1B;IACD;;EAHI,CAjDM;EAsDbK,OAAO,EAAE;IACPC,KAAK,GAAG;MACN,KAAKN,KAAL,GAAa,EAAb;IACD;;EAHM,CAtDI;;EA2DbO,OAAO,GAAG;IACR,IAAIC,MAAK,GAAI,KAAKC,GAAL,CAASC,aAAT,CAAuB,OAAvB,CAAb;;IAEA,IAAI,KAAKpB,SAAT,EAAoB;MAClBkB,MAAM,CAACG,KAAP;IACF;EACD;;AAjEY,CAAf","names":["props","data","type","Object","required","i18n","autoFocus","Boolean","default","onSearch","Function","onArrowLeft","onArrowRight","onArrowDown","onArrowUp","onEnter","value","computed","emojiIndex","watch","$emit","methods","clear","mounted","$input","$el","querySelector","focus"],"sourceRoot":"","sources":["C:\\Users\\multicampus\\Desktop\\새 폴더2\\S07P12C202\\frontend\\owo\\node_modules\\emoji-mart-vue-fast\\src\\components\\search.vue"],"sourcesContent":["<template>\n  <div class=\"emoji-mart-search\">\n    <input\n      type=\"text\"\n      :placeholder=\"i18n.search\"\n      role=\"textbox\"\n      aria-autocomplete=\"list\"\n      aria-owns=\"emoji-mart-list\"\n      aria-label=\"Search for an emoji\"\n      aria-describedby=\"emoji-mart-search-description\"\n      @keydown.left=\"($event) => $emit('arrowLeft', $event)\"\n      @keydown.right=\"() => $emit('arrowRight')\"\n      @keydown.down=\"() => $emit('arrowDown')\"\n      @keydown.up=\"($event) => $emit('arrowUp', $event)\"\n      @keydown.enter=\"() => $emit('enter')\"\n      v-model=\"value\"\n    />\n    <span class=\"hidden\" id=\"emoji-picker-search-description\"\n      >Use the left, right, up and down arrow keys to navigate the emoji search\n      results.</span\n    >\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    data: {\n      type: Object,\n      required: true,\n    },\n    i18n: {\n      type: Object,\n      required: true,\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false,\n    },\n    onSearch: {\n      type: Function,\n      required: true,\n    },\n    onArrowLeft: {\n      type: Function,\n      required: false,\n    },\n    onArrowRight: {\n      type: Function,\n      required: false,\n    },\n    onArrowDown: {\n      type: Function,\n      required: false,\n    },\n    onArrowUp: {\n      type: Function,\n      required: false,\n    },\n    onEnter: {\n      type: Function,\n      required: false,\n    },\n  },\n  data() {\n    return {\n      value: '',\n    }\n  },\n  computed: {\n    emojiIndex() {\n      return this.data\n    },\n  },\n  watch: {\n    value() {\n      this.$emit('search', this.value)\n    },\n  },\n  methods: {\n    clear() {\n      this.value = ''\n    },\n  },\n  mounted() {\n    let $input = this.$el.querySelector('input')\n\n    if (this.autoFocus) {\n      $input.focus()\n    }\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}