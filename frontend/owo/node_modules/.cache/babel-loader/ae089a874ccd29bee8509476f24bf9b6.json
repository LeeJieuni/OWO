{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport mainPageView from '../views/MainPage/mainPageView.vue';\nimport MyPageView from '../views/MyPage/MyPageView.vue';\nimport MyPageMainView from '../views/MyPage/MyPageMainView.vue';\nimport MyPageAnalysView from '../views/MyPage/MyPageAnalysView.vue';\nimport MyPageUpdateView from '../views/MyPage/MyPageUpdateView.vue';\nimport MyPageScheduleView from '../views/MyPage/MyPageScheduleView.vue';\nimport MyPageSlideView from '../views/MyPage/MyPageSlideView.vue';\nimport CompetitionView from '../views/Room/CompetitionView.vue';\nimport FriendView from '../views/Room/FriendView.vue';\nimport YoutubeView from '../views/Room/YoutubeView.vue';\nimport login from '../views/accounts/loginView.vue';\nimport register from '../views/accounts/registerView.vue';\nimport redirectView from '../views/accounts/RedirectView.vue';\nconst routes = [{\n  path: '/',\n  name: 'mainpage',\n  component: mainPageView,\n  meta: {\n    unauthorized: true\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: login,\n  meta: {\n    unauthorized: true\n  }\n}, {\n  path: '/oauth/redirect',\n  name: 'redirectView',\n  component: redirectView,\n  meta: {\n    unauthorized: true\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: register,\n  meta: {\n    unauthorized: true\n  }\n}, {\n  path: '/mypage',\n  name: 'MyPage',\n  component: MyPageView,\n  meta: {\n    unauthorized: true\n  },\n  children: [{\n    path: 'main',\n    name: 'MyPageMainView',\n    component: MyPageMainView\n  }, {\n    path: 'analys',\n    // name: 'MyPageAnalysView',\n    component: MyPageAnalysView\n  }, {\n    path: 'update',\n    // name: 'MyPageUpdateView',\n    component: MyPageUpdateView\n  }, {\n    path: 'schedule',\n    // name: 'MyPageScheduleView',\n    component: MyPageScheduleView\n  }]\n}, {\n  path: '/slide',\n  name: 'MyPageSlideView',\n  component: MyPageSlideView\n}, {\n  path: '/room/competition/',\n  name: 'competition1',\n  component: CompetitionView\n}, {\n  path: '/room/competition/:sessionId',\n  name: 'competition2',\n  component: CompetitionView\n}, {\n  path: '/room/friend',\n  name: 'friend',\n  component: FriendView\n}, {\n  path: '/room/youtube',\n  name: 'Youtube',\n  component: YoutubeView\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = sessionStorage.getItem('accessToken');\n  const refresh = sessionStorage.getItem('refreshToken');\n\n  if (token === null && refresh !== null) {\n    // accesstoken은 없는데 refresh값이 있을 경우, => 토큰 재발급함수 실행.\n    console.log('로그인 세션이 만료 되었습니다 다시 로그인 해주세요!');\n  }\n\n  if (to.matched.some(record => record.meta.unauthorized || token)) {\n    return next();\n  }\n\n  alert('로그인이 필요한 서비스입니다.');\n  return next('/login');\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","mainPageView","MyPageView","MyPageMainView","MyPageAnalysView","MyPageUpdateView","MyPageScheduleView","MyPageSlideView","CompetitionView","FriendView","YoutubeView","login","register","redirectView","routes","path","name","component","meta","unauthorized","children","router","history","beforeEach","to","from","next","token","sessionStorage","getItem","refresh","console","log","matched","some","record","alert"],"sources":["C:/Users/multicampus/Desktop/새 폴더2/S07P12C202/frontend/owo/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport mainPageView from '../views/MainPage/mainPageView.vue';\nimport MyPageView from '../views/MyPage/MyPageView.vue';\nimport MyPageMainView from '../views/MyPage/MyPageMainView.vue';\nimport MyPageAnalysView from '../views/MyPage/MyPageAnalysView.vue';\nimport MyPageUpdateView from '../views/MyPage/MyPageUpdateView.vue';\nimport MyPageScheduleView from '../views/MyPage/MyPageScheduleView.vue';\nimport MyPageSlideView from '../views/MyPage/MyPageSlideView.vue';\nimport CompetitionView from '../views/Room/CompetitionView.vue';\nimport FriendView from '../views/Room/FriendView.vue';\nimport YoutubeView from '../views/Room/YoutubeView.vue';\nimport login from '../views/accounts/loginView.vue';\nimport register from '../views/accounts/registerView.vue';\nimport redirectView from '../views/accounts/RedirectView.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'mainpage',\n    component: mainPageView,\n    meta: { unauthorized: true },\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: login,\n    meta: { unauthorized: true },\n  },\n  {\n    path: '/oauth/redirect',\n    name: 'redirectView',\n    component: redirectView,\n    meta: { unauthorized: true },\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: register,\n    meta: { unauthorized: true },\n  },\n  {\n    path: '/mypage',\n    name: 'MyPage',\n    component: MyPageView,\n    meta: { unauthorized: true },\n    children: [\n      {\n        path: 'main',\n        name: 'MyPageMainView',\n        component: MyPageMainView,\n      },\n      {\n        path: 'analys',\n        // name: 'MyPageAnalysView',\n        component: MyPageAnalysView,\n      },\n      {\n        path: 'update',\n        // name: 'MyPageUpdateView',\n        component: MyPageUpdateView,\n      },\n      {\n        path: 'schedule',\n        // name: 'MyPageScheduleView',\n        component: MyPageScheduleView,\n      },\n    ],\n  },\n  {\n    path: '/slide',\n    name: 'MyPageSlideView',\n    component: MyPageSlideView,\n  },\n  {\n    path: '/room/competition/',\n    name: 'competition1',\n    component: CompetitionView,\n  },\n  {\n    path: '/room/competition/:sessionId',\n    name: 'competition2',\n    component: CompetitionView,\n  },\n  {\n    path: '/room/friend',\n    name: 'friend',\n    component: FriendView,\n  },\n  {\n    path: '/room/youtube',\n    name: 'Youtube',\n    component: YoutubeView,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  const token = sessionStorage.getItem('accessToken');\n  const refresh = sessionStorage.getItem('refreshToken');\n  if (token === null && refresh !== null) { // accesstoken은 없는데 refresh값이 있을 경우, => 토큰 재발급함수 실행.\n    console.log('로그인 세션이 만료 되었습니다 다시 로그인 해주세요!');\n  }\n  if (to.matched.some((record) => record.meta.unauthorized || token)) {\n    return next();\n  }\n  alert('로그인이 필요한 서비스입니다.');\n  return next('/login');\n});\nexport default router;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}