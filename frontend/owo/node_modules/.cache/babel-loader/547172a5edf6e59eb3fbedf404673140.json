{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = [\"aria-label\"];\nconst _hoisted_2 = {\n  class: \"emoji-mart-category-label\"\n};\nconst _hoisted_3 = {\n  class: \"emoji-mart-category-label\"\n};\nconst _hoisted_4 = [\"aria-label\", \"data-title\", \"title\", \"onMouseenter\", \"onMouseleave\", \"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"emoji-mart-no-results-label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_emoji = _resolveComponent(\"emoji\");\n\n  return $options.isVisible && ($options.isSearch || $options.hasResults) ? (_openBlock(), _createElementBlock(\"section\", {\n    key: 0,\n    class: _normalizeClass({\n      'emoji-mart-category': true,\n      'emoji-mart-no-results': !$options.hasResults\n    }),\n    \"aria-label\": $props.i18n.categories[$props.id]\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", _hoisted_3, _toDisplayString($props.i18n.categories[$props.id]), 1\n  /* TEXT */\n  )]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.emojiObjects, ({\n    emojiObject,\n    emojiView\n  }) => {\n    return _openBlock(), _createElementBlock(_Fragment, null, [emojiView.canRender ? (_openBlock(), _createElementBlock(\"button\", {\n      \"aria-label\": emojiView.ariaLabel,\n      role: \"option\",\n      \"aria-selected\": \"false\",\n      \"aria-posinset\": \"1\",\n      \"aria-setsize\": \"1812\",\n      type: \"button\",\n      \"data-title\": emojiObject.short_name,\n      key: emojiObject.id,\n      title: emojiView.title,\n      class: _normalizeClass([\"emoji-mart-emoji\", $options.activeClass(emojiObject)]),\n      onMouseenter: $event => $props.emojiProps.onEnter(emojiView.getEmoji()),\n      onMouseleave: $event => $props.emojiProps.onLeave(emojiView.getEmoji()),\n      onClick: $event => $props.emojiProps.onClick(emojiView.getEmoji())\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass(emojiView.cssClass),\n      style: _normalizeStyle(emojiView.cssStyle)\n    }, _toDisplayString(emojiView.content), 7\n    /* TEXT, CLASS, STYLE */\n    )], 42\n    /* CLASS, PROPS, HYDRATE_EVENTS */\n    , _hoisted_4)) : _createCommentVNode(\"v-if\", true)], 64\n    /* STABLE_FRAGMENT */\n    );\n  }), 256\n  /* UNKEYED_FRAGMENT */\n  )), !$options.hasResults ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createVNode(_component_emoji, {\n    data: $props.data,\n    emoji: \"sleuth_or_spy\",\n    native: $props.emojiProps.native,\n    skin: $props.emojiProps.skin,\n    set: $props.emojiProps.set\n  }, null, 8\n  /* PROPS */\n  , [\"data\", \"native\", \"skin\", \"set\"]), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($props.i18n.notfound), 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true)], 10\n  /* CLASS, PROPS */\n  , _hoisted_1)) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EASSA,KAAK,EAAC;;;EACLA,KAAK,EAAC;;;;;;;EAmCLA,KAAK,EAAC;;;;;SAtCPC,uBAAcA,qBAAYA,mBAA1B,mBANRC,oBA8CU,SA9CV,EA8CU;UAAA;IA7CPF,KAAK;iCAAA;gCAAuEC;IAAvE,EA6CE;IAzCP,cAAYE,YAAKC,UAAL,CAAgBD,SAAhB;EAyCL,CA9CV,GAQEE,oBAEM,KAFN,cAEM,CADJA,oBAAoE,IAApE,cAAoEC,iBAA3BH,YAAKC,UAAL,CAAgBD,SAAhB,CAA2B,CAApE,EAA2D;EAAA;EAA3D,CACI,CAFN,sBAIAD,oBAsBWK,SAtBX,EAsBW,IAtBX,EAsBWC,YAtBoCP,qBAsBpC,EAtBgD;IAAxCQ,WAAwC;IAA3BC;EAA2B,MAAlB;+DAE/BA,SAAS,CAACC,2BADlBT,oBAoBS,QApBT,EAoBS;MAlBN,cAAYQ,SAAS,CAACE,SAkBhB;MAjBPC,IAAI,EAAC,QAiBE;MAhBP,iBAAc,OAgBP;MAfP,iBAAc,GAeP;MAdP,gBAAa,MAcN;MAbPC,IAAI,EAAC,QAaE;MAZN,cAAYL,WAAW,CAACM,UAYlB;MAXNC,GAAG,EAAEP,WAAW,CAACQ,EAWX;MAVNC,KAAK,EAAER,SAAS,CAACQ,KAUX;MATPlB,KAAK,mBAAC,kBAAD,EACGC,qBAAYQ,WAAZ,CADH,EASE;MAPNU,YAAU,YAAEhB,kBAAWiB,OAAX,CAAmBV,SAAS,CAACW,QAAV,EAAnB,CAON;MANNC,YAAU,YAAEnB,kBAAWoB,OAAX,CAAmBb,SAAS,CAACW,QAAV,EAAnB,CAMN;MALNG,OAAK,YAAErB,kBAAWqB,OAAX,CAAmBd,SAAS,CAACW,QAAV,EAAnB;IAKD,CApBT,GAiBEhB,oBAES,MAFT,EAES;MAFFL,KAAK,kBAAEU,SAAS,CAACe,QAAZ,CAEH;MAF0BC,KAAK,kBAAEhB,SAAS,CAACiB,QAAZ;IAE/B,CAFT,mBACEjB,SAAS,CAACkB,QADZ,EACmB;IAAA;IADnB,EAjBF;;IAAA;;;GAqBS,CAtBX;;EAAA,KAwBY3B,qCAAZC,oBASM,KATN,EASM2B,UATN,EASM,CARJC,aAMEC,gBANF,EAME;IALCC,IAAI,EAAE7B,WAKP;IAJA8B,KAAK,EAAC,eAIN;IAHCC,MAAM,EAAE/B,kBAAW+B,MAGpB;IAFCC,IAAI,EAAEhC,kBAAWgC,IAElB;IADCC,GAAG,EAAEjC,kBAAWiC;EACjB,CANF;;EAAA,oCAQI,EADJ/B,oBAAkE,KAAlE,cAAkEC,iBAAtBH,YAAKkC,QAAiB,CAAlE,EAAyD;EAAA;EAAzD,CACI,CATN,uCApCF;;EAAA","names":["class","$options","_createElementBlock","$props","categories","_createElementVNode","_toDisplayString","_Fragment","_renderList","emojiObject","emojiView","canRender","ariaLabel","role","type","short_name","key","id","title","onMouseenter","onEnter","getEmoji","onMouseleave","onLeave","onClick","cssClass","style","cssStyle","content","_hoisted_5","_createVNode","_component_emoji","data","emoji","native","skin","set","notfound"],"sourceRoot":"","sources":["C:\\Users\\multicampus\\Desktop\\새 폴더2\\S07P12C202\\frontend\\owo\\node_modules\\emoji-mart-vue-fast\\src\\components\\category.vue"],"sourcesContent":["<template>\n  <section\n    :class=\"{\n      'emoji-mart-category': true,\n      'emoji-mart-no-results': !hasResults,\n    }\"\n    :aria-label=\"i18n.categories[id]\"\n    v-if=\"isVisible && (isSearch || hasResults)\"\n  >\n    <div class=\"emoji-mart-category-label\">\n      <h3 class=\"emoji-mart-category-label\">{{ i18n.categories[id] }}</h3>\n    </div>\n\n    <template v-for=\"{ emojiObject, emojiView } in emojiObjects\">\n      <button\n        v-if=\"emojiView.canRender\"\n        :aria-label=\"emojiView.ariaLabel\"\n        role=\"option\"\n        aria-selected=\"false\"\n        aria-posinset=\"1\"\n        aria-setsize=\"1812\"\n        type=\"button\"\n        :data-title=\"emojiObject.short_name\"\n        :key=\"emojiObject.id\"\n        :title=\"emojiView.title\"\n        class=\"emoji-mart-emoji\"\n        :class=\"activeClass(emojiObject)\"\n        @mouseenter=\"emojiProps.onEnter(emojiView.getEmoji())\"\n        @mouseleave=\"emojiProps.onLeave(emojiView.getEmoji())\"\n        @click=\"emojiProps.onClick(emojiView.getEmoji())\"\n      >\n        <span :class=\"emojiView.cssClass\" :style=\"emojiView.cssStyle\">{{\n          emojiView.content\n        }}</span>\n      </button>\n    </template>\n\n    <div v-if=\"!hasResults\">\n      <emoji\n        :data=\"data\"\n        emoji=\"sleuth_or_spy\"\n        :native=\"emojiProps.native\"\n        :skin=\"emojiProps.skin\"\n        :set=\"emojiProps.set\"\n      />\n      <div class=\"emoji-mart-no-results-label\">{{ i18n.notfound }}</div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { EmojiView } from '../utils/emoji-data'\nimport Emoji from './Emoji.vue'\n\nexport default {\n  props: {\n    data: {\n      type: Object,\n      required: true,\n    },\n    i18n: {\n      type: Object,\n      required: true,\n    },\n    id: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    emojis: {\n      type: Array,\n    },\n    emojiProps: {\n      type: Object,\n      required: true,\n    },\n  },\n  methods: {\n    activeClass: function(emojiObject) {\n      if (!this.emojiProps.selectedEmoji) {\n        return ''\n      }\n      if (!this.emojiProps.selectedEmojiCategory) {\n        return ''\n      }\n      if (\n        this.emojiProps.selectedEmoji.id == emojiObject.id &&\n        this.emojiProps.selectedEmojiCategory.id == this.id\n      ) {\n        return 'emoji-mart-emoji-selected'\n      }\n      return ''\n    },\n  },\n  computed: {\n    isVisible() {\n      return !!this.emojis\n    },\n    isSearch() {\n      return this.name == 'Search'\n    },\n    hasResults() {\n      return this.emojis.length > 0\n    },\n    emojiObjects() {\n      return this.emojis.map((emoji) => {\n        let emojiObject = emoji\n        let emojiView = new EmojiView(\n          emoji,\n          this.emojiProps.skin,\n          this.emojiProps.set,\n          this.emojiProps.native,\n          this.emojiProps.fallback,\n          this.emojiProps.emojiTooltip,\n          this.emojiProps.emojiSize,\n        )\n        return { emojiObject, emojiView }\n      })\n    },\n  },\n  components: {\n    Emoji,\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}