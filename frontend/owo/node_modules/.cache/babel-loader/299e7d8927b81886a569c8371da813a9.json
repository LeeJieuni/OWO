{"ast":null,"code":"import { EmojiProps } from '../utils/shared-props';\nimport { EmojiView } from '../utils/emoji-data';\nexport default {\n  props: { ...EmojiProps,\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    view() {\n      return new EmojiView(this.emojiObject, this.skin, this.set, this.native, this.fallback, this.tooltip, this.size);\n    },\n\n    sanitizedData() {\n      return this.emojiObject._sanitized;\n    },\n\n    title() {\n      return this.tooltip ? this.emojiObject.short_name : null;\n    },\n\n    emojiObject() {\n      if (typeof this.emoji == 'string') {\n        return this.data.findEmoji(this.emoji);\n      } else {\n        return this.emoji;\n      }\n    }\n\n  },\n\n  created() {},\n\n  methods: {\n    onClick() {\n      this.$emit('click', this.emojiObject);\n    },\n\n    onMouseEnter() {\n      this.$emit('mouseenter', this.emojiObject);\n    },\n\n    onMouseLeave() {\n      this.$emit('mouseleave', this.emojiObject);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmBA,SAASA,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe;EACbC,KAAK,EAAE,EACL,GAAGF,UADE;IAELG,IAAI,EAAE;MACJC,IAAI,EAAEC,MADF;MAEJC,QAAQ,EAAE;IAFN;EAFD,CADM;EAQbC,QAAQ,EAAE;IACRC,IAAI,GAAG;MACL,OAAO,IAAIP,SAAJ,CACL,KAAKQ,WADA,EAEL,KAAKC,IAFA,EAGL,KAAKC,GAHA,EAIL,KAAKC,MAJA,EAKL,KAAKC,QALA,EAML,KAAKC,OANA,EAOL,KAAKC,IAPA,CAAP;IASD,CAXO;;IAYRC,aAAa,GAAG;MACd,OAAO,KAAKP,WAAL,CAAiBQ,UAAxB;IACD,CAdO;;IAeRC,KAAK,GAAG;MACN,OAAO,KAAKJ,OAAL,GAAe,KAAKL,WAAL,CAAiBU,UAAhC,GAA6C,IAApD;IACD,CAjBO;;IAkBRV,WAAW,GAAG;MACZ,IAAI,OAAO,KAAKW,KAAZ,IAAqB,QAAzB,EAAmC;QACjC,OAAO,KAAKjB,IAAL,CAAUkB,SAAV,CAAoB,KAAKD,KAAzB,CAAP;MACF,CAFA,MAEO;QACL,OAAO,KAAKA,KAAZ;MACF;IACD;;EAxBO,CARG;;EAkCbE,OAAO,GAAG,CAAE,CAlCC;;EAmCbC,OAAO,EAAE;IACPC,OAAO,GAAG;MACR,KAAKC,KAAL,CAAW,OAAX,EAAoB,KAAKhB,WAAzB;IACD,CAHM;;IAIPiB,YAAY,GAAG;MACb,KAAKD,KAAL,CAAW,YAAX,EAAyB,KAAKhB,WAA9B;IACD,CANM;;IAOPkB,YAAY,GAAG;MACb,KAAKF,KAAL,CAAW,YAAX,EAAyB,KAAKhB,WAA9B;IACD;;EATM;AAnCI,CAAf","names":["EmojiProps","EmojiView","props","data","type","Object","required","computed","view","emojiObject","skin","set","native","fallback","tooltip","size","sanitizedData","_sanitized","title","short_name","emoji","findEmoji","created","methods","onClick","$emit","onMouseEnter","onMouseLeave"],"sourceRoot":"","sources":["C:\\Users\\multicampus\\Desktop\\새 폴더2\\S07P12C202\\frontend\\owo\\node_modules\\emoji-mart-vue-fast\\src\\components\\Emoji.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    v-if=\"view.canRender\"\n    :title=\"view.title\"\n    :aria-label=\"view.ariaLabel\"\n    :data-title=\"title\"\n    class=\"emoji-mart-emoji\"\n    @mouseenter=\"onMouseEnter\"\n    @mouseleave=\"onMouseLeave\"\n    @click=\"onClick\"\n  >\n    <span :class=\"view.cssClass\" :style=\"view.cssStyle\">{{\n      view.content\n    }}</span>\n  </component>\n</template>\n\n<script>\nimport { EmojiProps } from '../utils/shared-props'\nimport { EmojiView } from '../utils/emoji-data'\n\nexport default {\n  props: {\n    ...EmojiProps,\n    data: {\n      type: Object,\n      required: true,\n    },\n  },\n  computed: {\n    view() {\n      return new EmojiView(\n        this.emojiObject,\n        this.skin,\n        this.set,\n        this.native,\n        this.fallback,\n        this.tooltip,\n        this.size,\n      )\n    },\n    sanitizedData() {\n      return this.emojiObject._sanitized\n    },\n    title() {\n      return this.tooltip ? this.emojiObject.short_name : null\n    },\n    emojiObject() {\n      if (typeof this.emoji == 'string') {\n        return this.data.findEmoji(this.emoji)\n      } else {\n        return this.emoji\n      }\n    },\n  },\n  created() {},\n  methods: {\n    onClick() {\n      this.$emit('click', this.emojiObject)\n    },\n    onMouseEnter() {\n      this.$emit('mouseenter', this.emojiObject)\n    },\n    onMouseLeave() {\n      this.$emit('mouseleave', this.emojiObject)\n    },\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}