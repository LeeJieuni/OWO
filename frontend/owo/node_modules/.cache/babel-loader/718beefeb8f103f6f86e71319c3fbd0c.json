{"ast":null,"code":"import html2canvas from 'html2canvas';\nimport WebRTC from '@/components/Room/WebRTC.vue';\nimport WebRTCPhoto from '@/components/Room/WebRTCPhoto.vue';\nimport setTimer2 from '@/components/Room/setTimer2.vue';\nimport axios from 'axios';\nimport { OpenVidu } from 'openvidu-browser';\nimport emojidata from 'emoji-mart-vue-fast/data/all.json';\nimport 'emoji-mart-vue-fast/css/emoji-mart.css';\nimport { Picker, EmojiIndex } from 'emoji-mart-vue-fast/src';\nimport { mapState, mapActions, mapMutations } from 'vuex';\nimport swal from 'sweetalert2';\nwindow.Swal = swal;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nconst openvidu = 'openvidu';\nconst accounts = 'accounts';\nconst meetingroom = 'meetingroom';\nconst emojiIndex = new EmojiIndex(emojidata);\nconst emoji = 'emoji'; // const record = 'record';\n\nconst today = new Date();\nconst year = today.getFullYear();\nconst month = today.getMonth() + 1;\nconst day = today.getDate(); // eslint-disable-next-line\n\nconst format = year + '-' + ('00' + month.toString()).slice(-2) + '-' + `00${day.toString()}`.slice(-2);\nexport default {\n  name: 'CompetitionView',\n  components: {\n    WebRTC,\n    WebRTCPhoto,\n    Picker,\n    setTimer2\n  },\n\n  data() {\n    return {\n      // 타이머 셋팅\n      timer: 3,\n      temp_timer: 3,\n      take_photo_timer: null,\n      is_take_photo: false,\n      // 이모지 셋팅\n      myemoji: '',\n      emojiIndex,\n      Emoji_ONOFF: null,\n      emojiList: [],\n      // 채팅\n      myChat: '',\n      allchattingList: [],\n      chatONOFF: false,\n      // openvidu 셋팅\n      OV: undefined,\n      session: undefined,\n      video: false,\n      mic: false,\n      mainStreamManager: undefined,\n      publisher: undefined,\n      subscribers: [],\n      // 방 설정\n      youtubeURL: '',\n      lockroomcheck: false,\n      isMaster: true,\n      roommode: 'GAME',\n      mode: ['FRIEND', 'YOUTUBE', 'GAME'],\n      sessionId: null,\n      // roomName: '붙어보자!',\n      gameName: ['팔굽혀펴기', '런지', '버피테스트'],\n      credentials: {\n        recordDatetime: format,\n        recordMemo: null,\n        secret: false,\n        // recordimg: null,\n        tagList: []\n      },\n      credentialsUser: {\n        memberId: null,\n        meetingRoomId: null\n      },\n      newTagContent: '',\n      myTags: [],\n      mypictures: []\n    };\n  },\n\n  setup() {},\n\n  created() {\n    this.sessionId = this.$route.params.sessionId;\n    this.joinSession(this.sessionId);\n    this.credentialsUser.memberId = this.userInfo.id;\n    this.credentialsUser.meetingRoomId = this.mySessionId;\n  },\n\n  moundted() {},\n\n  unmounted() {},\n\n  watch: {\n    mySessionId() {},\n\n    camera() {\n      if (this.publisher !== undefined) {\n        if (this.camera) {\n          this.publisher.publishVideo(true);\n        } else {\n          this.publisher.publishVideo(false);\n        }\n      }\n    },\n\n    mic() {\n      if (this.publisher !== undefined) {\n        if (this.mic) {\n          this.publisher.publishAudio(true);\n        } else {\n          this.publisher.publishAudio(false);\n        }\n      }\n    }\n\n  },\n  computed: { ...mapState(emoji, ['allEmojiList']),\n    ...mapState(accounts, ['accessToken', 'userInfo']),\n    ...mapState(openvidu, ['OPENVIDU_SERVER_URL', 'OPENVIDU_SERVER_SECRET']),\n    ...mapState(meetingroom, ['myRoomName', 'mySessionId', 'meetingRoomList', 'camera', 'mic']) // ...openviduHelper.mapState([\"OPENVIDU_SERVER_URL\", \"OPENVIDU_SERVER_SECRET\"]),\n    // ...meetingRoomHelper.mapState([\"sessionID\", \"meetingRoomList\"]),\n\n  },\n  methods: {\n    // textarea 바이트 수 체크하는 함수\n    fn_checkByte() {\n      const maxByte = 200; // 최대 200바이트\n\n      const textVal = document.getElementById('exerciseMemo').value; // 입력한 문자\n\n      const textLen = textVal.length; // 입력한 문자수\n\n      let totalByte = 0;\n\n      for (let i = 0; i < textLen; i += 1) {\n        const eachChar = textVal.charAt(i);\n        console.log(eachChar);\n        const uniChar = escape(eachChar); // 유니코드 형식으로 변환\n\n        console.log(uniChar);\n\n        if (uniChar.length > 4) {\n          // 한글 : 2Byte\n          totalByte += 2;\n        } else {\n          // 영문,숫자,특수문자 : 1Byte\n          totalByte += 1;\n        }\n      }\n\n      if (totalByte > maxByte) {\n        swal.fire({\n          icon: 'warning',\n          title: '알림',\n          text: '최대 200bytes까지 입력가능해요!'\n        });\n        document.getElementById('nowByte').innerText = totalByte;\n        document.getElementById('nowByte').style.color = 'red';\n      } else {\n        document.getElementById('nowByte').innerText = totalByte;\n        document.getElementById('nowByte').style.color = 'green';\n      }\n    },\n\n    newtag(newTagContent) {\n      if (this.myTags.length >= 5) {\n        swal.fire({\n          icon: 'warning',\n          title: '알림',\n          text: '추가 태그는 5개까지 가능해요!'\n        });\n      } else {\n        if (newTagContent !== '') {\n          if (this.myTags.indexOf(newTagContent.replace(' ', '')) < 0) {\n            this.myTags.push(newTagContent.replace(' ', ''));\n            this.newTagContent = '';\n            this.myTagList(this.myTags[this.myTags.length - 1]);\n          }\n\n          this.newTagContent = '';\n        }\n\n        this.newTagContent = '';\n      }\n    },\n\n    deletemyTagList(newTagContent) {\n      this.myTags.splice(this.myTags.indexOf(newTagContent.replace(' ', '')), 1);\n\n      if (this.credentials.tagList.indexOf(newTagContent.replace(' ', '')) >= 0) {\n        this.credentials.tagList.splice(this.credentials.tagList.indexOf(newTagContent.replace(' ', '')), 1);\n      }\n    },\n\n    myTagList(tag) {\n      // this.credentials.tagList.push(tag);\n      // console.log(this.credentials.tagList.indexOf(tag));\n      if (this.credentials.tagList.indexOf(tag) >= 0) {\n        document.getElementById(`${tag}`).classList.add('btn-secondary');\n        document.getElementById(`${tag}`).classList.remove('btn-primary');\n        this.credentials.tagList.splice(this.credentials.tagList.indexOf(tag), 1);\n      } else {\n        document.getElementById(`${tag}`).classList.add('btn-primary');\n        document.getElementById(`${tag}`).classList.remove('btn-secondary');\n        this.credentials.tagList.push(tag);\n      }\n    },\n\n    time() {\n      this.startround1();\n    },\n\n    sendRecord(credentials, credentialsUser) {\n      this.credentialsUser.memberId = encodeURI(this.credentialsUser.memberId);\n      this.credentialsUser.meetingRoomId = encodeURI(this.credentialsUser.meetingRoomId);\n      console.log(this.credentialsUser.memberId);\n      console.log(this.credentialsUser.meetingRoomId);\n      console.log(this.credentials);\n      axios.post(`https://i7c202.p.ssafy.io:8282/api/record/finish/${credentialsUser.memberId}/${credentialsUser.meetingRoomId}`, credentials).then(res => {\n        console.log('성공', res.data);\n      }).catch(err => {\n        console.log('실패', err);\n      });\n    },\n\n    ...mapActions(emoji, ['changeEmojiList', 'removeEmojiList']),\n    ...mapMutations(meetingroom, ['SET_SESSION_ID']),\n    ...mapActions(meetingroom, ['makeSession', 'getMeetingRoomList', 'enterMeetingRoom', 'leaveMeetingRoom', 'startMeetingRoom']),\n\n    async makeRoom() {\n      const requestDto = {\n        accesstoken: this.accessToken,\n        memberId: '2',\n        // state와 연결하는 항목\n        secret: false,\n        // 방 만들 때 바인딩해야하는 항목\n        password: '',\n        // 방 만들 때 바인딩해야하는 항목\n        mode: 'GAME',\n        // 방 만들 때 바인딩해야하는 항목\n        roomName: '방1',\n        // 방 만들 때 바인딩해야하는 항목\n        type: 'GAME',\n        // 방 만들 때 바인딩해야하는 항목\n        link: ''\n      };\n      await this.makeSession(requestDto);\n      console.log('=========================');\n      console.log(this.mySessionId);\n      this.joinSession(this.mySessionId);\n    },\n\n    getRoomList(m) {\n      const requestDto = {\n        accesstoken: this.accessToken,\n        mode: m\n      };\n      this.getMeetingRoomList(requestDto);\n    },\n\n    joinSession(sessionNum) {\n      this.SET_SESSION_ID(sessionNum);\n      console.log(`sessionID = ${sessionNum}`);\n      const requestDto = {\n        accesstoken: this.accessToken,\n        roomId: String(sessionNum)\n      };\n      console.log(sessionNum);\n      this.enterMeetingRoom(requestDto); // --- Get an OpenVidu object ---\n\n      this.OV = new OpenVidu(); // --- Init a session ---\n\n      this.session = this.OV.initSession(); // --- Specify the actions when events take place in the session ---\n      // On every new Stream received...\n\n      this.session.on('streamCreated', ({\n        stream\n      }) => {\n        const subscriber = this.session.subscribe(stream);\n        this.subscribers.push(subscriber);\n      }); // On every Stream destroyed...\n\n      this.session.on('streamDestroyed', ({\n        stream\n      }) => {\n        const index = this.subscribers.indexOf(stream.streamManager, 0);\n\n        if (index >= 0) {\n          this.subscribers.splice(index, 1);\n        }\n      }); // On every asynchronous exception...\n\n      this.session.on('exception', ({\n        exception\n      }) => {\n        console.warn(exception);\n      }); // --- Connect to the session with a valid user token ---\n      // 'getToken' method is simulating what your server-side should do.\n      // 'token' parameter should be retrieved and returned by your own backend\n\n      this.getToken(this.mySessionId).then(token => {\n        this.session.connect(token, {\n          clientData: this.userInfo.nick\n        }).then(() => {\n          // --- Get your own camera stream with the desired properties ---\n          const publisher = this.OV.initPublisher(undefined, {\n            audioSource: undefined,\n            // The source of audio. If undefined default microphone\n            videoSource: undefined,\n            // The source of video. If undefined default webcam\n            publishAudio: true,\n            // Whether you want to start publishing with your audio unmuted or not\n            publishVideo: true,\n            // Whether you want to start publishing with your video enabled or not\n            resolution: '260x180',\n            // The resolution of your video\n            frameRate: 60,\n            // The frame rate of your video\n            insertMode: 'APPEND',\n            // How the video is inserted in the target element 'video-container'\n            mirror: false // Whether to mirror your local video or not\n\n          });\n          this.mainStreamManager = publisher;\n          this.publisher = publisher; // --- Publish your stream ---\n\n          this.session.publish(this.publisher);\n        }).catch(error => {\n          console.log('There was an error connecting to the session:', error.code, error.message);\n        });\n      }); // Receiver of the message (usually before calling 'session.connect')\n\n      this.session.on('signal:my-chat', event => {\n        const chatdata = event.data.split(','); // console.log(event.from); // Connection object of the sender //누가 보냈는지가 아니네..?\n        // console.log(event.type); // The type of message (\"my-chat\")\n        // this.allChat = event.data;\n        // this.who = event.from; //누가 보냈는지\n\n        const obj = {\n          m: chatdata[0],\n          p: chatdata[1]\n        };\n        this.allchattingList.push(obj); // console.log(this.recvList[0].m);\n\n        const chat = document.querySelector('#chattingList');\n        chat.scrollTop = chat.scrollHeight + 10000000;\n      });\n      this.session.on('signal:my-emoji', event => {\n        const chatdata2 = event.data.split(',');\n        const obj = [chatdata2[1], chatdata2[0]];\n        this.emojiList.push(obj);\n        this.changeEmojiList(this.emojiList);\n      }); // Receiver of the message (usually before calling 'session.connect')\n\n      this.session.on('signal:start', event => {\n        console.log(event);\n        console.log('게임! start');\n      });\n      this.session.on('signal:end', event => {\n        console.log(event);\n        console.log('게임! end');\n        this.leaveSession();\n      });\n      this.session.on('signal:startround1', () => {\n        this.$refs.setTimer2.pauseTimer();\n        this.youtubeURL = 'https://www.youtube.com/embed/gTowV_F07uI';\n      });\n      window.addEventListener('beforeunload', this.leaveSession);\n    },\n\n    sendEmoji() {\n      this.session.signal({\n        data: `${this.myemoji},${this.userInfo.nick}`,\n        to: [],\n        type: 'my-emoji'\n      }).then(() => {}).catch(() => {});\n    },\n\n    sendMassage() {\n      // Sender of the message (after 'session.connect')\n      this.session.signal({\n        data: `${this.myChat},${this.userInfo.nick}`,\n        // Any string (optional)\n        to: [],\n        // Array of Connection objects (optional. Broadcast to everyone if empty)\n        type: 'my-chat' // The type of message (optional)\n\n      }).then(() => {\n        const resetText = document.querySelector('#mychat');\n        resetText.value = '';\n        const chat = document.querySelector('#chattingList');\n        chat.scrollTop = chat.scrollHeight + 1000000;\n        console.log('Message successfully sent');\n        this.myChat = '';\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n\n    end() {\n      const requestDto = {\n        accesstoken: this.accessToken,\n        roomId: this.mySessionId\n      };\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/room/end/${Number(requestDto.roomId)}`,\n        method: 'put',\n        headers: {\n          'X-AUTH-TOKEN': requestDto.accesstoken\n        }\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.session.signal({\n        data: 'stameetingRoomEnd',\n        // Any string (optional)\n        to: [],\n        // Array of Connection objects (optional. Broadcast to everyone if empty)\n        type: 'end' // The type of message (optional)\n\n      }).then(() => {\n        console.log('Message successfully sent(end)');\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n\n    startround1() {\n      this.session.signal({\n        data: '',\n        // Any string (optional)\n        to: [],\n        // Array of Connection objects (optional. Broadcast to everyone if empty)\n        type: 'startround1' // The type of message (optional)\n\n      });\n    },\n\n    start() {\n      const requestDto = {\n        accesstoken: this.accessToken,\n        roomId: this.mySessionId\n      };\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/room/start/${Number(requestDto.roomId)}`,\n        method: 'put',\n        headers: {\n          'X-AUTH-TOKEN': requestDto.accesstoken\n        }\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.session.signal({\n        data: 'stameetingRoomStartrt',\n        // Any string (optional)\n        to: [],\n        // Array of Connection objects (optional. Broadcast to everyone if empty)\n        type: 'start' // The type of message (optional)\n\n      }).then(() => {\n        console.log('Message successfully sent(start)');\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n\n    async leaveSession() {\n      this.removeEmojiList();\n      this.removeEmoji(); // --- Leave the session by calling 'disconnect' method over the Session object ---\n\n      if (this.session) this.session.disconnect();\n      const requestDto = {\n        accesstoken: this.accessToken,\n        roomId: this.mySessionId\n      };\n      await this.leaveMeetingRoom(requestDto);\n      this.session = undefined;\n      this.mainStreamManager = undefined;\n      this.publisher = undefined;\n      this.subscribers = [];\n      this.OV = undefined;\n      window.removeEventListener('beforeunload', this.leaveSession);\n      this.SET_SESSION_ID('');\n      this.$router.push('/');\n    },\n\n    updateMainVideoStreamManager(stream) {\n      if (this.mainStreamManager === stream) return;\n      this.mainStreamManager = stream;\n    },\n\n    /**\n     * --------------------------\n     * SERVER-SIDE RESPONSIBILITY\n     * --------------------------\n     * These methods retrieve the mandatory user token from OpenVidu Server.\n     * This behavior MUST BE IN YOUR SERVER-SIDE IN PRODUCTION (by using\n     * the API REST, openvidu-java-client or openvidu-node-client):\n     *   1) Initialize a Session in OpenVidu Server(POST /openvidu/api/sessions)\n     *   2) Create a Connection in OpenVidu Server\n     * (POST /openvidu/api/sessions/<SESSION_ID>/connection)\n     *   3) The Connection.token must be consumed in Session.connect() method\n     */\n    getToken(mySessionId) {\n      return this.createSession(mySessionId).then(sessionId => this.createToken(sessionId));\n    },\n\n    // See https://docs.openvidu.io/en/stable/reference-docs/REST-API/#post-session\n    createSession(sessionId) {\n      return new Promise((resolve, reject) => {\n        axios.post(`${this.OPENVIDU_SERVER_URL}/openvidu/api/sessions`, JSON.stringify({\n          customSessionId: sessionId\n        }), {\n          auth: {\n            username: 'OPENVIDUAPP',\n            password: this.OPENVIDU_SERVER_SECRET\n          }\n        }).then(response => response.data).then(data => resolve(data.id)).catch(error => {\n          if (error.response.status === 409) {\n            resolve(sessionId);\n          } else {\n            console.warn(`No connection to OpenVidu Server. This may be a certificate error at ${this.OPENVIDU_SERVER_URL}`);\n\n            if (window.confirm(`No connection to OpenVidu Server. This may be a certificate error at ${this.OPENVIDU_SERVER_URL}\\n\\nClick OK to navigate and accept it. If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"${this.OPENVIDU_SERVER_URL}\"`)) {\n              window.location.assign(`${this.OPENVIDU_SERVER_URL}/accept-certificate`);\n            }\n\n            reject(error.response);\n          }\n        });\n      });\n    },\n\n    // See https://docs.openvidu.io/en/stable/reference-docs/REST-API/#post-connection\n    createToken(sessionId) {\n      return new Promise((resolve, reject) => {\n        axios.post(`${this.OPENVIDU_SERVER_URL}/openvidu/api/sessions/${sessionId}/connection`, {}, {\n          auth: {\n            username: 'OPENVIDUAPP',\n            password: this.OPENVIDU_SERVER_SECRET\n          }\n        }).then(response => response.data).then(data => resolve(data.token)).catch(error => reject(error.response));\n      });\n    },\n\n    chatoff() {\n      this.chatONOFF = false;\n    },\n\n    chaton() {\n      this.chatONOFF = true;\n    },\n\n    open_emoji() {\n      this.Emoji_ONOFF = !this.Emoji_ONOFF;\n    },\n\n    showEmoji(e) {\n      this.myemoji = e.native;\n      this.sendEmoji();\n      this.open_emoji();\n    },\n\n    removeEmoji() {\n      this.emojiList = [];\n    },\n\n    ...mapMutations(meetingroom, ['SET_CAMERA', 'SET_MIC']),\n\n    mic_on() {\n      this.mic = true;\n      this.SET_MIC(false);\n    },\n\n    mic_off() {\n      this.mic = false;\n      this.SET_MIC(true);\n    },\n\n    video_on() {\n      this.video = true;\n      this.SET_CAMERA(false);\n    },\n\n    video_off() {\n      this.video = false;\n      this.SET_CAMERA(true);\n    },\n\n    take_photo() {\n      this.temp_timer = this.timer;\n      this.is_take_photo = true;\n      this.take_photo_timer = setInterval(() => {\n        this.timer -= 1;\n        console.log(this.timer);\n\n        if (this.timer === 0) {\n          console.log('사진찍는 모션');\n          const el = document.querySelector('#take_photo_WebRTC'); // eslint-disable-next-line\n\n          html2canvas(el).then(canvas => {\n            if (this.mypictures.length >= 3) {\n              this.mypictures.pop();\n            }\n\n            console.log(canvas.toDataURL('image/png', 1.0)); // this.mypictures.unshift(canvas.toDataURL('image/png', 1.0));\n\n            this.mypictures.unshift(canvas.toDataURL('image/png', 1.0)); // const link = document.createElement('a');\n            // document.body.appendChild(link);\n            // link.href = canvas.toDataURL('image/png', 1.0);\n            // localStorage.setItem('userImage', link);\n            // link.download = '안녕하세요?.png';\n            // link.click();\n            // document.body.removeChild(link);\n          });\n          clearInterval(this.take_photo_timer);\n          this.is_take_photo = false;\n          this.timer = this.temp_timer;\n        }\n      }, 1000);\n    },\n\n    set_timer_3() {\n      this.timer = 3;\n      console.log(this.timer);\n    },\n\n    set_timer_5() {\n      this.timer = 5;\n      console.log(this.timer);\n    },\n\n    set_timer_10() {\n      this.timer = 10;\n      console.log(this.timer);\n    },\n\n    lockroom() {\n      this.lockroomcheck = !this.lockroomcheck;\n    },\n\n    exerciseJournalSubmit(event) {\n      event.preventDefault();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["html2canvas","WebRTC","WebRTCPhoto","setTimer2","axios","OpenVidu","emojidata","Picker","EmojiIndex","mapState","mapActions","mapMutations","swal","window","Swal","defaults","headers","post","openvidu","accounts","meetingroom","emojiIndex","emoji","today","Date","year","getFullYear","month","getMonth","day","getDate","format","toString","slice","name","components","data","timer","temp_timer","take_photo_timer","is_take_photo","myemoji","Emoji_ONOFF","emojiList","myChat","allchattingList","chatONOFF","OV","undefined","session","video","mic","mainStreamManager","publisher","subscribers","youtubeURL","lockroomcheck","isMaster","roommode","mode","sessionId","gameName","credentials","recordDatetime","recordMemo","secret","tagList","credentialsUser","memberId","meetingRoomId","newTagContent","myTags","mypictures","setup","created","$route","params","joinSession","userInfo","id","mySessionId","moundted","unmounted","watch","camera","publishVideo","publishAudio","computed","methods","fn_checkByte","maxByte","textVal","document","getElementById","value","textLen","length","totalByte","i","eachChar","charAt","console","log","uniChar","escape","fire","icon","title","text","innerText","style","color","newtag","indexOf","replace","push","myTagList","deletemyTagList","splice","tag","classList","add","remove","time","startround1","sendRecord","encodeURI","then","res","catch","err","makeRoom","requestDto","accesstoken","accessToken","password","roomName","type","link","makeSession","getRoomList","m","getMeetingRoomList","sessionNum","SET_SESSION_ID","roomId","String","enterMeetingRoom","initSession","on","stream","subscriber","subscribe","index","streamManager","exception","warn","getToken","token","connect","clientData","nick","initPublisher","audioSource","videoSource","resolution","frameRate","insertMode","mirror","publish","error","code","message","event","chatdata","split","obj","p","chat","querySelector","scrollTop","scrollHeight","chatdata2","changeEmojiList","leaveSession","$refs","pauseTimer","addEventListener","sendEmoji","signal","to","sendMassage","resetText","end","url","Number","method","start","removeEmojiList","removeEmoji","disconnect","leaveMeetingRoom","removeEventListener","$router","updateMainVideoStreamManager","createSession","createToken","Promise","resolve","reject","OPENVIDU_SERVER_URL","JSON","stringify","customSessionId","auth","username","OPENVIDU_SERVER_SECRET","response","status","confirm","location","assign","chatoff","chaton","open_emoji","showEmoji","e","native","mic_on","SET_MIC","mic_off","video_on","SET_CAMERA","video_off","take_photo","setInterval","el","canvas","pop","toDataURL","unshift","clearInterval","set_timer_3","set_timer_5","set_timer_10","lockroom","exerciseJournalSubmit","preventDefault"],"sourceRoot":"","sources":["C:\\Users\\multicampus\\Desktop\\새 폴더2\\S07P12C202\\frontend\\owo\\src\\views\\Room\\CompetitionView.vue"],"sourcesContent":["<template>\n  <div class=\"d-flex justify-content-center\" style=\"width: 100%; height:100vh\">\n    <div style=\"width:1600px;\" class=\"viewsetting\">\n      <!-- eslint-disable-next-line -->\n      <div class=\"d-flex justify-content-center align-items-center\" style=\"width: 100%; height: 80px;\">\r\n        <h3 class=\"game-name m-0\">{{ gameName }}</h3>\n      </div>\n      <!-- 세션 -->\n      <div id=\"session\" v-if=\"session\">\n        <!-- WebRTC 목록 -->\n        <div>\n          <div id=\"\" class=\"row d-flex align-items-start justify-content-center\">\n            <WebRTC :stream-manager=\"mainStreamManager\"/>\n            <WebRTC :stream-manager=\"sub\"\n              v-for=\"sub in subscribers\"\n              :key=\"sub.stream.connection.connectionId\"\n              @click=\"updateMainVideoStreamManager(sub)\"\n            />\n            <div v-if=\"this.subscribers.length <= 0\" class=\"webrtcetc col-4 m0p0 mb-2 mx-1\"></div>\n            <div v-if=\"this.subscribers.length <= 1\" class=\"webrtcetc col-4 m0p0 mb-2 mx-1\"></div>\n            <div v-if=\"this.subscribers.length <= 2\" class=\"webrtcetc col-4 m0p0 mb-2 mx-1\"></div>\n            <div v-if=\"this.subscribers.length <= 3\" class=\"webrtcetc col-4 m0p0 mb-2 mx-1\"></div>\n            <div v-if=\"this.subscribers.length <= 4\" class=\"webrtcetc col-4 m0p0 mb-2 mx-1\"></div>\n          </div>\n        </div>\n      </div>\n      <!-- 운동 종료 모달 -->\n      <div>\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <!-- <button\n          v-b-modal.after-exercise-modal class=\"btn btn-outline-secondary m-2\">\n            <img class=\"menu_icon1\" src=\"@/assets/icon/room_end.png\" alt=\"mic_off\">\n            운동 종료\n          </button> -->\n          <b-modal id=\"after-exercise-modal\" size=\"xl\" hide-footer hide-header>\n            <form @submit.prevent=\"sendRecord(credentials, credentialsUser)\">\n              <div class=\"checkboxposition\">\n                <h1 class=\"title text-center mt-4\">🏃‍♂️운동 일지</h1>\n                <label for=\"my-checkbox m-0\" class=\"secretcheckbox d-flex align-items-center\">\n                  <input v-model=\"credentials.secret\" type=\"checkbox\">\n                  <div v-if=\"credentials.secret\">\n                    <!-- eslint-disable-next-line -->\n                    &ensp;&ensp;<span style=\"color:#de7474;\">비공개</span>&ensp;<img class=\"menu_icon1\" src=\"@/assets/icon/lock.png\" alt=\"\">\r\n                  </div>\n                  <div  v-if=\"!credentials.secret\">\n                    <!-- eslint-disable-next-line -->\n                    &ensp;&ensp;&ensp;&ensp;<span style=\"color:#4e8aff;\">공개</span>&ensp;<img class=\"menu_icon1\" src=\"@/assets/icon/unlock.png\" alt=\"\">\r\n                  </div>\n                  <!-- eslint-disable-next-line -->\n                </label>\r\n              </div>\n              <div>\n                <br>\n                <!-- 운동일지, 사진 -->\n                <div>\n                  <div class=\"md-title2 text-center\">📷오늘의 운동 사진</div>\n                  <br>\n                    <!-- eslint-disable-next-line -->\n                </div>\r\n                <div class=\"row d-flex align-items-start justify-content-center\">\n                  <!-- eslint-disable-next-line -->\n                  <button v-for=\"(mypicture, i) in mypictures\" :key=\"i\" class=\"col-4 m0p0\" style=\"padding:0px; margin:0px; width:330px;\">\r\n                    <img :src=\"mypicture\" alt=\"img\" style=\"width:328px;\">\n                  </button>\n                </div>\n                <!-- 메모 남기기 버튼 -->\n                <div>\n                  <div class=\"md-title\">\n                    <div class=\"text-center\">운동 종류</div>\n                    <div>\n                      <div class=\"d-flex justify-content-center\" style=\"flex-flow:row wrap;\">\n                        <!-- eslint-disable-next-line -->\n                        <button @click.prevent=\"myTagList('#유산소')\" id=\"#유산소\" class=\"mybutton btn btn-secondary m-2 p-2\">&ensp;#유산소&ensp;</button>\r\n                        <!-- eslint-disable-next-line -->\n                        <button @click.prevent=\"myTagList('#헬스')\" id=\"#헬스\" class=\"mybutton btn btn-secondary m-2 p-2\">&ensp;#헬스&ensp;</button>\r\n                        <!-- eslint-disable-next-line -->\n                        <button @click.prevent=\"myTagList('#스트레칭')\" id=\"#스트레칭\" class=\"mybutton btn btn-secondary m-2 p-2\">&ensp;#스트레칭&ensp;</button>\r\n                        <!-- eslint-disable-next-line -->\n                        <button @click.prevent=\"myTagList('#맨몸운동')\" id=\"#맨몸운동\" class=\"mybutton btn btn-secondary m-2 p-2\">&ensp;#맨몸운동&ensp;</button>\r\n                        <!-- eslint-disable-next-line -->\n                        <button @click.prevent=\"myTagList('#요가')\" id=\"#요가\" class=\"mybutton btn btn-secondary m-2 p-2\">&ensp;#요가&ensp;</button>\r\n                        <!-- eslint-disable-next-line -->\n                        <button @click.prevent=\"myTagList('#필라테스')\" id=\"#필라테스\" class=\"mybutton btn btn-secondary m-2 p-2\">&ensp;#필라테스&ensp;</button>\r\n                        <!-- eslint-disable-next-line -->\n                        <button @click.prevent=\"myTagList('#기타')\" id=\"#기타\" class=\"mybutton btn btn-secondary m-2 p-2\">&ensp;#기타&ensp;</button>\r\n                      </div>\n                      <!-- eslint-disable-next-line -->\n                      <div class=\"d-flex justify-content-center\" style=\"flex-flow:row wrap;\">\r\n                        <!-- eslint-disable-next-line -->\n                        <div v-for=\"(myTag, i) in myTags\" :key=\"i\" class=\"m-0 d-flex\">\r\n                          <!-- eslint-disable-next-line -->\n                          <button @click.prevent=\"myTagList(`${myTag}`)\" v-bind:id=\"`${myTag}`\" class=\"mybutton btn btn-secondary m-2 p-2\">&ensp;#{{myTag}}&ensp;</button><button @click.prevent=\"deletemyTagList(`${myTag}`)\" class=\"mybutton\">X</button>\r\n                        </div>\n                        <form @submit.prevent=\"newtag(newTagContent)\">\n                            <!-- eslint-disable-next-line -->\n                          <button class=\"mybutton btn btn-secondary m-2 p-2 d-flex align-items-center\" type=\"submit\">\r\n                            <!-- eslint-disable-next-line -->\n                            <label for=\"my-tag\" class=\"m-0 p-0\" style=\"width:100% - 120px;\">\r\n                              <!-- eslint-disable-next-line -->\n                              <input id=\"myTagInput\" v-model=\"newTagContent\" type=\"text\" style=\"text-align: center; width:100px; color:white; border: none; border-bottom:1px solid white; background: transparent;\" placeholder=\"나만의 태그\">\r\n                            </label>&ensp;추가&ensp;\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"md-title text-center\">메모 남기기</div>\n                  <!-- eslint-disable-next-line -->\n                  <div class=\"bytepositionsub d-flex justify-content-center\" style=\"width:100%;\">\r\n                    <label for=\"exerciseMemo\" class=\"d-flex justify-content-center\">\n                      <!-- eslint-disable-next-line -->\n                      <textarea v-model=\"credentials.recordMemo\" id=\"exerciseMemo\" rows=\"4\" style=\"width:95%\" @keyup=\"fn_checkByte(this)\"></textarea>\r\n                    </label>\n                    <div class=\"btyeposition\">(<span id=\"nowByte\">0</span>/200bytes)</div>\n                  </div>\n                </div>\n                <div class=\"d-flex justify-content-center\">\n                  <!-- eslint-disable-next-line -->\n                  <b-button type=\"submit\" class=\"mybutton btn btn-success m-2 p-2\">&ensp;작성 완료&ensp;</b-button>\r\n                </div>\n              </div>\n              <div class=\"text-center\">{{credentials}}</div>\n            </form>\n          </b-modal>\n        </div>\n      </div>\n      <!-- 촬영 시 배경 -->\n      <div class=\"d-flex justify-content-center align-items-center\"\n      v-if=\"is_take_photo\" id=\"take_photo_background\"></div>\n      <div class=\"d-flex justify-content-center align-items-center text-white\"\n      v-if=\"is_take_photo\" id=\"\">\n        <WebRTCPhoto id=\"take_photo_WebRTC\" :stream-manager=\"mainStreamManager\"/>\n      </div>\n      <div class=\"d-flex justify-content-center align-items-center text-white mt-4\"\n      v-if=\"is_take_photo\" id=\"take_photo_timer\">{{ timer }}</div>\n      <!-- 이모티콘 영역 -->\n      <div class=\"emoji_position\" v-if=\"Emoji_ONOFF\">\n        <div class=\"row\">\n          <!-- apple, google, twitter, facebook -->\n          <Picker :data=\"emojiIndex\" set=\"twitter\" @select=\"showEmoji\" />\n        </div>\n      </div>\n      <!-- 채팅 영역 -->\n      <div v-if=\"this.session\">\n        <button v-if=\"chatONOFF\" @click=\"chatoff\" class=\"chat\">\n          <img class=\"chatimg\" src=\"@/assets/icon/commentoff.png\" alt=\"\">\n        </button>\n        <button v-if=\"!chatONOFF\" @click=\"chaton\" class=\"chat\">\n          <img class=\"chatimg\" src=\"@/assets/icon/commenton.png\" alt=\"\">\n        </button>\n        <div v-if=\"chatONOFF\" class=\"achat d-flex justify-content-center align-items-center\">\n          <div class=\"d-flex align-items-center achat-submit\">\n            <label class=\"m-0\" for=\"chatting\">\n              <textarea @keyup.enter=\"sendMassage\" id=\"mychat\"\n              name=\"chatting\" type=\"text\"\n              v-model=\"myChat\" style=\"resize:none; border-radius:5px;\" placeholder=\" 채팅 입력\"\n              rows=\"2\" cols=\"25\"></textarea>\n            </label>\n            <button @click=\"sendMassage\" class=\"btn btn-light achat-submit2\">\n            Send</button>\n          </div>\n          <div id=\"chattingList\" class=\"fluid achat-content\"\n          style=\"overflow:auto; height:490px;\">\n            <div v-for=\"(item, i) in allchattingList\" :key=\"i\">\n              <div class=\"mychatting p-0\" style=\"margin-top:0px; margin-bottom:10px;\n              margin-left:auto; margin-right:30px; width:220px; height:90px;\"\n              v-if=\"item.p === this.userInfo.nick\">\n                <div style=\"text-align:left; margin-top:5px; margin-left:5px; font-size:large;\">\n                  <strong>{{item.p}}</strong>\n                </div>\n                <div style=\"word-wrap:break-word; text-align:left; margin-top:5px;\n                margin-left:5px; font-size:medium;\">\n                  {{item.m}}\n                </div>\n              </div>\n              <div class=\"yourchatting p-0\" style=\"margin-top:0px; margin-bottom:10px;\n              margin-right:auto; margin-left:30px; width:220px; height:90px;\"\n              v-if=\"item.p !== this.userInfo.nick\">\n                <div style=\"text-align:left; margin-top:5px; margin-left:5px; font-size:large;\">\n                  <strong>{{item.p}}</strong>\n                </div>\n                <div style=\"word-wrap:break-word; text-align:left; margin-top:5px;\n                margin-left:5px; font-size:medium;\">\n                  {{item.m}}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- 버튼 -->\n      <div>\n        <button @click=\"open_emoji\" class=\"open_emoji\">\n          <img class=\"menu_icon2\" src=\"@/assets/icon/emoji.png\" alt=\"emoji\">\n        </button>\n        <button class=\"mybtn1\" @click=\"mic_off\" v-if=\"mic\">\n          <img class=\" menu_icon2\" src=\"@/assets/icon/mic_off.png\" alt=\"mic_on\">\n        </button>\n        <button class=\"mybtn1\" @click=\"mic_on\" v-if=\"!mic\">\n          <img class=\"menu_icon2\" src=\"@/assets/icon/mic_on.png\" alt=\"mic_off\">\n        </button>\n        <button class=\"mybtn2\" @click=\"video_off\" v-if=\"video\">\n          <img class=\"menu_icon2\" src=\"@/assets/icon/video_off.png\" alt=\"video_on\">\n        </button>\n        <button class=\"mybtn2\" @click=\"video_on\" v-if=\"!video\">\n          <img class=\"menu_icon2\" src=\"@/assets/icon/video_on.png\" alt=\"video_off\">\n        </button>\n        <button class=\"mybtn3\" @click=\"take_photo\">\n          <img class=\"menu_icon2\" src=\"@/assets/icon/photo.png\" alt=\"photo\">\n        </button>\n        <button class=\"mybtn6\" @click=\"leaveSession\">\n          <img class=\"menu_icon2\" src=\"@/assets/icon/roomout.png\" alt=\"leaveSession\">\n        </button>\n        <button v-if=\"isStarted\" class=\"mybtn5\" @click=\"time\">\n          <img class=\"menu_icon4\" src=\"@/assets/icon/start.png\" alt=\"Start\">\n        </button>\n        <!-- eslint-disable-next-line -->\n        <button class=\"mybtn4 dropdown dropright dropright-toggle-no-caret text-decoration-none\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          <img class=\"menu_icon2\" src=\"@/assets/icon/phototimer.png\" alt=\"photo\">\n        </button>\n        <ul class=\"dropdown-menu\" role=\"menu\" style=\"width:50px;\">\n        <!-- eslint-disable-next-line -->\n          <li role=\"presentation\" style=\"width:100%;\"><button @click=\"set_timer_3\" class=\"dropdown-item text-center\" type=\"button\" target=\"_self\">타이머 : 3초</button></li>\r\n        <!-- eslint-disable-next-line -->\n          <li role=\"presentation\" style=\"width:100%;\"><button @click=\"set_timer_5\" class=\"dropdown-item text-center\" type=\"button\" target=\"_self\">타이머 : 5초</button></li>\r\n        <!-- eslint-disable-next-line -->\n          <li role=\"presentation\" style=\"width:100%;\"><button @click=\"set_timer_10\" class=\"dropdown-item text-center\" type=\"button\" target=\"_self\">타이머 : 10초</button></li>\r\n        </ul>\n      </div>\n      <div class=\"setTimer2position\">\n        <setTimer2 ref=\"setTimer2\" />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport html2canvas from 'html2canvas';\nimport WebRTC from '@/components/Room/WebRTC.vue';\nimport WebRTCPhoto from '@/components/Room/WebRTCPhoto.vue';\nimport setTimer2 from '@/components/Room/setTimer2.vue';\nimport axios from 'axios';\nimport { OpenVidu } from 'openvidu-browser';\nimport emojidata from 'emoji-mart-vue-fast/data/all.json';\nimport 'emoji-mart-vue-fast/css/emoji-mart.css';\nimport { Picker, EmojiIndex } from 'emoji-mart-vue-fast/src';\nimport { mapState, mapActions, mapMutations } from 'vuex';\nimport swal from 'sweetalert2';\n\nwindow.Swal = swal;\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nconst openvidu = 'openvidu';\nconst accounts = 'accounts';\nconst meetingroom = 'meetingroom';\nconst emojiIndex = new EmojiIndex(emojidata);\nconst emoji = 'emoji';\n// const record = 'record';\n\nconst today = new Date();\nconst year = today.getFullYear();\nconst month = today.getMonth() + 1;\nconst day = today.getDate();\n// eslint-disable-next-line\nconst format = year + '-' + (('00' + month.toString()).slice(-2)) + '-' +\r\n((`00${day.toString()}`).slice(-2));\n\nexport default {\n  name: 'CompetitionView',\n  components: {\n    WebRTC,\n    WebRTCPhoto,\n    Picker,\n    setTimer2,\n  },\n  data() {\n    return {\n      // 타이머 셋팅\n      timer: 3,\n      temp_timer: 3,\n      take_photo_timer: null,\n      is_take_photo: false,\n      // 이모지 셋팅\n      myemoji: '',\n      emojiIndex,\n      Emoji_ONOFF: null,\n      emojiList: [],\n      // 채팅\n      myChat: '',\n      allchattingList: [],\n      chatONOFF: false,\n      // openvidu 셋팅\n      OV: undefined,\n      session: undefined,\n      video: false,\n      mic: false,\n      mainStreamManager: undefined,\n      publisher: undefined,\n      subscribers: [],\n      // 방 설정\n      youtubeURL: '',\n      lockroomcheck: false,\n      isMaster: true,\n      roommode: 'GAME',\n      mode: ['FRIEND', 'YOUTUBE', 'GAME'],\n      sessionId: null,\n      // roomName: '붙어보자!',\n      gameName: ['팔굽혀펴기', '런지', '버피테스트'],\n      credentials: {\n        recordDatetime: format,\n        recordMemo: null,\n        secret: false,\n        // recordimg: null,\n        tagList: [],\n      },\n      credentialsUser: {\n        memberId: null,\n        meetingRoomId: null,\n      },\n      newTagContent: '',\n      myTags: [],\n      mypictures: [],\n    };\n  },\n  setup() {},\n  created() {\n    this.sessionId = this.$route.params.sessionId;\n    this.joinSession(this.sessionId);\n    this.credentialsUser.memberId = this.userInfo.id;\n    this.credentialsUser.meetingRoomId = this.mySessionId;\n  },\n  moundted() {\n  },\n  unmounted() {},\n  watch: {\n    mySessionId() {},\n    camera() {\n      if (this.publisher !== undefined) {\n        if (this.camera) {\n          this.publisher.publishVideo(true);\n        } else {\n          this.publisher.publishVideo(false);\n        }\n      }\n    },\n    mic() {\n      if (this.publisher !== undefined) {\n        if (this.mic) {\n          this.publisher.publishAudio(true);\n        } else {\n          this.publisher.publishAudio(false);\n        }\n      }\n    },\n  },\n\n  computed: {\n    ...mapState(emoji, ['allEmojiList']),\n    ...mapState(accounts, ['accessToken', 'userInfo']),\n    ...mapState(openvidu, ['OPENVIDU_SERVER_URL', 'OPENVIDU_SERVER_SECRET']),\n    ...mapState(meetingroom, ['myRoomName', 'mySessionId', 'meetingRoomList', 'camera', 'mic']),\n    // ...openviduHelper.mapState([\"OPENVIDU_SERVER_URL\", \"OPENVIDU_SERVER_SECRET\"]),\n    // ...meetingRoomHelper.mapState([\"sessionID\", \"meetingRoomList\"]),\n  },\n  methods: {\n    // textarea 바이트 수 체크하는 함수\n    fn_checkByte() {\n      const maxByte = 200; // 최대 200바이트\n      const textVal = document.getElementById('exerciseMemo').value; // 입력한 문자\n      const textLen = textVal.length; // 입력한 문자수\n      let totalByte = 0;\n\n      for (let i = 0; i < textLen; i += 1) {\n        const eachChar = textVal.charAt(i);\n        console.log(eachChar);\n        const uniChar = escape(eachChar); // 유니코드 형식으로 변환\n        console.log(uniChar);\n        if (uniChar.length > 4) {\n          // 한글 : 2Byte\n          totalByte += 2;\n        } else {\n          // 영문,숫자,특수문자 : 1Byte\n          totalByte += 1;\n        }\n      }\n      if (totalByte > maxByte) {\n        swal.fire({\n          icon: 'warning',\n          title: '알림',\n          text: '최대 200bytes까지 입력가능해요!',\n        });\n        document.getElementById('nowByte').innerText = totalByte;\n        document.getElementById('nowByte').style.color = 'red';\n      } else {\n        document.getElementById('nowByte').innerText = totalByte;\n        document.getElementById('nowByte').style.color = 'green';\n      }\n    },\n    newtag(newTagContent) {\n      if (this.myTags.length >= 5) {\n        swal.fire({\n          icon: 'warning',\n          title: '알림',\n          text: '추가 태그는 5개까지 가능해요!',\n        });\n      } else {\n        if (newTagContent !== '') {\n          if (this.myTags.indexOf(newTagContent.replace(' ', '')) < 0) {\n            this.myTags.push(newTagContent.replace(' ', ''));\n            this.newTagContent = '';\n            this.myTagList(this.myTags[this.myTags.length - 1]);\n          }\n          this.newTagContent = '';\n        }\n        this.newTagContent = '';\n      }\n    },\n    deletemyTagList(newTagContent) {\n      this.myTags.splice(this.myTags.indexOf(newTagContent.replace(' ', '')), 1);\n      if (this.credentials.tagList.indexOf(newTagContent.replace(' ', '')) >= 0) {\n        this.credentials.tagList.splice(this.credentials.tagList.indexOf(newTagContent.replace(' ', '')), 1);\n      }\n    },\n    myTagList(tag) {\n      // this.credentials.tagList.push(tag);\n      // console.log(this.credentials.tagList.indexOf(tag));\n      if (this.credentials.tagList.indexOf(tag) >= 0) {\n        document.getElementById(`${tag}`).classList.add('btn-secondary');\n        document.getElementById(`${tag}`).classList.remove('btn-primary');\n        this.credentials.tagList.splice(this.credentials.tagList.indexOf(tag), 1);\n      } else {\n        document.getElementById(`${tag}`).classList.add('btn-primary');\n        document.getElementById(`${tag}`).classList.remove('btn-secondary');\n        this.credentials.tagList.push(tag);\n      }\n    },\n    time() {\n      this.startround1();\n    },\n    sendRecord(credentials, credentialsUser) {\n      this.credentialsUser.memberId = encodeURI(this.credentialsUser.memberId);\n      this.credentialsUser.meetingRoomId = encodeURI(this.credentialsUser.meetingRoomId);\n      console.log(this.credentialsUser.memberId);\n      console.log(this.credentialsUser.meetingRoomId);\n      console.log(this.credentials);\n      axios.post(`https://i7c202.p.ssafy.io:8282/api/record/finish/${credentialsUser.memberId}/${credentialsUser.meetingRoomId}`, credentials)\n        .then((res) => {\n          console.log('성공', res.data);\n        })\n        .catch((err) => {\n          console.log('실패', err);\n        });\n    },\n    ...mapActions(emoji, ['changeEmojiList', 'removeEmojiList']),\n    ...mapMutations(meetingroom, ['SET_SESSION_ID']),\n    ...mapActions(meetingroom, [\n      'makeSession',\n      'getMeetingRoomList',\n      'enterMeetingRoom',\n      'leaveMeetingRoom',\n      'startMeetingRoom',\n    ]),\n    async makeRoom() {\n      const requestDto = {\n        accesstoken: this.accessToken,\n        memberId: '2', // state와 연결하는 항목\n        secret: false, // 방 만들 때 바인딩해야하는 항목\n        password: '', // 방 만들 때 바인딩해야하는 항목\n        mode: 'GAME', // 방 만들 때 바인딩해야하는 항목\n        roomName: '방1', // 방 만들 때 바인딩해야하는 항목\n        type: 'GAME', // 방 만들 때 바인딩해야하는 항목\n        link: '',\n      };\n      await this.makeSession(requestDto);\n      console.log('=========================');\n      console.log(this.mySessionId);\n      this.joinSession(this.mySessionId);\n    },\n    getRoomList(m) {\n      const requestDto = {\n        accesstoken: this.accessToken,\n        mode: m,\n      };\n      this.getMeetingRoomList(requestDto);\n    },\n    joinSession(sessionNum) {\n      this.SET_SESSION_ID(sessionNum);\n      console.log(`sessionID = ${sessionNum}`);\n      const requestDto = {\n        accesstoken: this.accessToken,\n        roomId: String(sessionNum),\n      };\n      console.log(sessionNum);\n      this.enterMeetingRoom(requestDto);\n      // --- Get an OpenVidu object ---\n      this.OV = new OpenVidu();\n\n      // --- Init a session ---\n      this.session = this.OV.initSession();\n\n      // --- Specify the actions when events take place in the session ---\n\n      // On every new Stream received...\n      this.session.on('streamCreated', ({ stream }) => {\n        const subscriber = this.session.subscribe(stream);\n        this.subscribers.push(subscriber);\n      });\n\n      // On every Stream destroyed...\n      this.session.on('streamDestroyed', ({ stream }) => {\n        const index = this.subscribers.indexOf(stream.streamManager, 0);\n        if (index >= 0) {\n          this.subscribers.splice(index, 1);\n        }\n      });\n\n      // On every asynchronous exception...\n      this.session.on('exception', ({ exception }) => {\n        console.warn(exception);\n      });\n\n      // --- Connect to the session with a valid user token ---\n\n      // 'getToken' method is simulating what your server-side should do.\n      // 'token' parameter should be retrieved and returned by your own backend\n      this.getToken(this.mySessionId).then((token) => {\n        this.session\n          .connect(token, { clientData: this.userInfo.nick })\n          .then(() => {\n            // --- Get your own camera stream with the desired properties ---\n\n            const publisher = this.OV.initPublisher(undefined, {\n              audioSource: undefined, // The source of audio. If undefined default microphone\n              videoSource: undefined, // The source of video. If undefined default webcam\n              publishAudio: true,\n              // Whether you want to start publishing with your audio unmuted or not\n              publishVideo: true,\n              // Whether you want to start publishing with your video enabled or not\n              resolution: '260x180', // The resolution of your video\n              frameRate: 60, // The frame rate of your video\n              insertMode: 'APPEND',\n              // How the video is inserted in the target element 'video-container'\n              mirror: false, // Whether to mirror your local video or not\n            });\n\n            this.mainStreamManager = publisher;\n            this.publisher = publisher;\n\n            // --- Publish your stream ---\n\n            this.session.publish(this.publisher);\n          })\n          .catch((error) => {\n            console.log('There was an error connecting to the session:', error.code, error.message);\n          });\n      });\n      // Receiver of the message (usually before calling 'session.connect')\n      this.session.on('signal:my-chat', (event) => {\n        const chatdata = event.data.split(',');\n        // console.log(event.from); // Connection object of the sender //누가 보냈는지가 아니네..?\n        // console.log(event.type); // The type of message (\"my-chat\")\n        // this.allChat = event.data;\n        // this.who = event.from; //누가 보냈는지\n        const obj = {\n          m: chatdata[0],\n          p: chatdata[1],\n        };\n        this.allchattingList.push(obj);\n        // console.log(this.recvList[0].m);\n        const chat = document.querySelector('#chattingList');\n        chat.scrollTop = chat.scrollHeight + 10000000;\n      });\n\n      this.session.on('signal:my-emoji', (event) => {\n        const chatdata2 = event.data.split(',');\n        const obj = [chatdata2[1], chatdata2[0]];\n        this.emojiList.push(obj);\n        this.changeEmojiList(this.emojiList);\n      });\n\n      // Receiver of the message (usually before calling 'session.connect')\n      this.session.on('signal:start', (event) => {\n        console.log(event);\n        console.log('게임! start');\n      });\n\n      this.session.on('signal:end', (event) => {\n        console.log(event);\n        console.log('게임! end');\n        this.leaveSession();\n      });\n\n      this.session.on('signal:startround1', () => {\n        this.$refs.setTimer2.pauseTimer();\n        this.youtubeURL = 'https://www.youtube.com/embed/gTowV_F07uI';\n      });\n\n      window.addEventListener('beforeunload', this.leaveSession);\n    },\n\n    sendEmoji() {\n      this.session\n        .signal({\n          data: `${this.myemoji},${this.userInfo.nick}`,\n          to: [],\n          type: 'my-emoji',\n        })\n        .then(() => {\n        })\n        .catch(() => {});\n    },\n\n    sendMassage() {\n      // Sender of the message (after 'session.connect')\n      this.session\n        .signal({\n          data: `${this.myChat},${this.userInfo.nick}`, // Any string (optional)\n          to: [], // Array of Connection objects (optional. Broadcast to everyone if empty)\n          type: 'my-chat', // The type of message (optional)\n        })\n        .then(() => {\n          const resetText = document.querySelector('#mychat');\n          resetText.value = '';\n          const chat = document.querySelector('#chattingList');\n          chat.scrollTop = chat.scrollHeight + 1000000;\n          console.log('Message successfully sent');\n          this.myChat = '';\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    end() {\n      const requestDto = {\n        accesstoken: this.accessToken,\n        roomId: this.mySessionId,\n      };\n\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/room/end/${Number(requestDto.roomId)}`,\n        method: 'put',\n        headers: {\n          'X-AUTH-TOKEN': requestDto.accesstoken,\n        },\n      })\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      this.session\n        .signal({\n          data: 'stameetingRoomEnd', // Any string (optional)\n          to: [], // Array of Connection objects (optional. Broadcast to everyone if empty)\n          type: 'end', // The type of message (optional)\n        })\n        .then(() => {\n          console.log('Message successfully sent(end)');\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    startround1() {\n      this.session\n        .signal({\n          data: '', // Any string (optional)\n          to: [], // Array of Connection objects (optional. Broadcast to everyone if empty)\n          type: 'startround1', // The type of message (optional)\n        });\n    },\n    start() {\n      const requestDto = {\n        accesstoken: this.accessToken,\n        roomId: this.mySessionId,\n      };\n\n      axios({\n        url: `https://i7c202.p.ssafy.io:8282/api/room/start/${Number(requestDto.roomId)}`,\n        method: 'put',\n        headers: {\n          'X-AUTH-TOKEN': requestDto.accesstoken,\n        },\n      })\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      this.session\n        .signal({\n          data: 'stameetingRoomStartrt', // Any string (optional)\n          to: [], // Array of Connection objects (optional. Broadcast to everyone if empty)\n          type: 'start', // The type of message (optional)\n        })\n        .then(() => {\n          console.log('Message successfully sent(start)');\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    async leaveSession() {\n      this.removeEmojiList();\n      this.removeEmoji();\n      // --- Leave the session by calling 'disconnect' method over the Session object ---\n      if (this.session) this.session.disconnect();\n      const requestDto = {\n        accesstoken: this.accessToken,\n        roomId: this.mySessionId,\n      };\n      await this.leaveMeetingRoom(requestDto);\n      this.session = undefined;\n      this.mainStreamManager = undefined;\n      this.publisher = undefined;\n      this.subscribers = [];\n      this.OV = undefined;\n      window.removeEventListener('beforeunload', this.leaveSession);\n      this.SET_SESSION_ID('');\n      this.$router.push('/');\n    },\n\n    updateMainVideoStreamManager(stream) {\n      if (this.mainStreamManager === stream) return;\n      this.mainStreamManager = stream;\n    },\n\n    /**\n     * --------------------------\n     * SERVER-SIDE RESPONSIBILITY\n     * --------------------------\n     * These methods retrieve the mandatory user token from OpenVidu Server.\n     * This behavior MUST BE IN YOUR SERVER-SIDE IN PRODUCTION (by using\n     * the API REST, openvidu-java-client or openvidu-node-client):\n     *   1) Initialize a Session in OpenVidu Server(POST /openvidu/api/sessions)\n     *   2) Create a Connection in OpenVidu Server\n     * (POST /openvidu/api/sessions/<SESSION_ID>/connection)\n     *   3) The Connection.token must be consumed in Session.connect() method\n     */\n\n    getToken(mySessionId) {\n      return this.createSession(mySessionId).then((sessionId) => this.createToken(sessionId));\n    },\n    // See https://docs.openvidu.io/en/stable/reference-docs/REST-API/#post-session\n    createSession(sessionId) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\n            `${this.OPENVIDU_SERVER_URL}/openvidu/api/sessions`,\n            JSON.stringify({\n              customSessionId: sessionId,\n            }),\n            {\n              auth: {\n                username: 'OPENVIDUAPP',\n                password: this.OPENVIDU_SERVER_SECRET,\n              },\n            },\n          )\n          .then((response) => response.data)\n          .then((data) => resolve(data.id))\n          .catch((error) => {\n            if (error.response.status === 409) {\n              resolve(sessionId);\n            } else {\n              console.warn(\n                `No connection to OpenVidu Server. This may be a certificate error at ${this.OPENVIDU_SERVER_URL}`,\n              );\n              if (\n                window.confirm(\n                  `No connection to OpenVidu Server. This may be a certificate error at ${this.OPENVIDU_SERVER_URL}\\n\\nClick OK to navigate and accept it. If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"${this.OPENVIDU_SERVER_URL}\"`,\n                )\n              ) {\n                window.location.assign(`${this.OPENVIDU_SERVER_URL}/accept-certificate`);\n              }\n              reject(error.response);\n            }\n          });\n      });\n    },\n\n    // See https://docs.openvidu.io/en/stable/reference-docs/REST-API/#post-connection\n    createToken(sessionId) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\n            `${this.OPENVIDU_SERVER_URL}/openvidu/api/sessions/${sessionId}/connection`,\n            {},\n            {\n              auth: {\n                username: 'OPENVIDUAPP',\n                password: this.OPENVIDU_SERVER_SECRET,\n              },\n            },\n          )\n          .then((response) => response.data)\n          .then((data) => resolve(data.token))\n          .catch((error) => reject(error.response));\n      });\n    },\n    chatoff() {\n      this.chatONOFF = false;\n    },\n    chaton() {\n      this.chatONOFF = true;\n    },\n    open_emoji() {\n      this.Emoji_ONOFF = !this.Emoji_ONOFF;\n    },\n    showEmoji(e) {\n      this.myemoji = e.native;\n      this.sendEmoji();\n      this.open_emoji();\n    },\n    removeEmoji() {\n      this.emojiList = [];\n    },\n    ...mapMutations(meetingroom, ['SET_CAMERA', 'SET_MIC']),\n    mic_on() {\n      this.mic = true;\n      this.SET_MIC(false);\n    },\n    mic_off() {\n      this.mic = false;\n      this.SET_MIC(true);\n    },\n    video_on() {\n      this.video = true;\n      this.SET_CAMERA(false);\n    },\n    video_off() {\n      this.video = false;\n      this.SET_CAMERA(true);\n    },\n    take_photo() {\n      this.temp_timer = this.timer;\n      this.is_take_photo = true;\n      this.take_photo_timer = setInterval(() => {\n        this.timer -= 1;\n        console.log(this.timer);\n        if (this.timer === 0) {\n          console.log('사진찍는 모션');\n          const el = document.querySelector('#take_photo_WebRTC');\n          // eslint-disable-next-line\n          html2canvas(el).then((canvas) => {\r\n            if (this.mypictures.length >= 3) { this.mypictures.pop(); }\n            console.log(canvas.toDataURL('image/png', 1.0));\n            // this.mypictures.unshift(canvas.toDataURL('image/png', 1.0));\n            this.mypictures.unshift(canvas.toDataURL('image/png', 1.0));\n            // const link = document.createElement('a');\n            // document.body.appendChild(link);\n            // link.href = canvas.toDataURL('image/png', 1.0);\n            // localStorage.setItem('userImage', link);\n            // link.download = '안녕하세요?.png';\n            // link.click();\n            // document.body.removeChild(link);\n          });\n          clearInterval(this.take_photo_timer);\n          this.is_take_photo = false;\n          this.timer = this.temp_timer;\n        }\n      }, 1000);\n    },\n    set_timer_3() {\n      this.timer = 3;\n      console.log(this.timer);\n    },\n    set_timer_5() {\n      this.timer = 5;\n      console.log(this.timer);\n    },\n    set_timer_10() {\n      this.timer = 10;\n      console.log(this.timer);\n    },\n    lockroom() {\n      this.lockroomcheck = !this.lockroomcheck;\n    },\n    exerciseJournalSubmit(event) {\n      event.preventDefault();\n    },\n  },\n};\n</script>\n<style scoped>\ndiv {\n  color: black;\n}\n\n.menu_icon1 {\n  width:30px;\n}\n\n.menu_icon2 {\n  width:50px;\n}\n\n.menu_icon3 {\n  height:40px;\n  width:40px;\n}\n\n.menu_icon4 {\n  width:100px;\n}\n\n.emoji_position {\n  position:fixed;\n  bottom: 100px;\n  left: 20px;\n  z-index:1000;\n}\n\n.open_emoji {\n  background-color:transparent;\n  border:none;\n  position:fixed;\n  bottom: 30px;\n  left: 30px;\n}\n\n.chat {\n  border:none;\n  background-color:transparent;\n  position:fixed;\n  bottom: 29px;\n  right: 30px;\n}\n\n.chatimg {\n  width:50px;\n}\n\n.achat {\n  position:fixed;\n  border: 4px solid #4e8aff;\n  border-radius: 30px;\n  width:320px;\n  height:600px;\n  background-color: #4e8aff;\n  bottom: 100px;\n  right: 20px;\n}\n\n.achat-content {\n  position:fixed;\n  border: 4px solid #4e8aff;\n  width:320px;\n  height:490px;\n  background-color: white;\n  bottom: 180px;\n  right: 20px;\n}\n\n.achat-submit {\n  position:fixed;\n  width:300px;\n  height:70px;\n  bottom: 105px;\n  right: 19px;\n}\n\n.achat-submit2 {\n  position: fixed;\n  bottom: 124px;\n  right: 40px;\n}\n\n.mychatting {position:relative; margin: 50px; padding: 20px; width:180px; height:90px;\nborder:1px solid #C5a180; border-radius: 10px; background-color:  #C5a180;}\n.mychatting:after {content:\"\"; position: absolute; top: 21px; right: -30px; border-left: 30px\nsolid  #C5a180; border-top: 10px solid transparent; border-bottom: 10px solid transparent;}\n\n.yourchatting {position:relative; margin: 50px; padding: 20px; width:180px; height:90px;\nborder:1px solid #ccb9a8; border-radius: 10px; background-color: #ccb9a8;}\n.yourchatting:after {content:\"\"; position: absolute; top: 21px; left: -30px; border-right: 30px\nsolid #ccb9a8; border-top: 10px solid transparent; border-bottom: 10px solid transparent;}\n\n.webrtcetc {\n  /* width: 30%;\n  height:100%; */\n  width:520px;\n  height:360px;\n  text-align:center;\n  vertical-align: middle;\n  background-image: url('../../assets/icon/Loading2.gif');\n  background-position: center;\n  background-size: 30px 30px;\n  background-repeat: no-repeat;\n  border-radius: 20px;\n  border: 4px solid #4e8aff;\n  background-color:#eaf1ff;\n}\n\n.Emoji {\n  position:fixed;\n  top:100px;\n  left:100px;\n  z-index: 103;\n}\n\n.m0p0 {\n  margin:0;\n  padding:0;\n}\n\n.row { display: flex; }\n.row > * { margin: auto; }\n\n#take_photo_background {\n    background-color: gray;\n    position: fixed;\n    overflow: hidden;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 600;\n    opacity: 0.7;\n    font-size:300px;\n}\n\n#take_photo_WebRTC {\n  background-color:gray;\n  position: fixed;\n  width: 60%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  /* height: 80%; */\n  z-index: 601;\n}\n\n#take_photo_timer {\n    position:fixed;\n    top: 0%;\n    left: 0%;\n    width: 100%;\n    height: 100%;\n    z-index: 602;\n    font-size:300px;\n}\n\n.after-exercise {\n    width:600px;\n    margin:auto;\n}\n\n.mybutton {\n  padding: 0;\n  border: none;\n}\n\n#after-exercise-modal {\n  font-family: 'NanumSquareRound', 'Noto Sans KR', sans-serif;\n  /* width: 900px; */\n}\n\n.title {\n  font-weight: 900;\n}\n\n.md-title {\n  font-size: 24px;\n  font-weight: 800;\n  margin: 20px 0;\n}\n\n.md-title2 {\n  font-size: 24px;\n  font-weight: 800;\n  margin: 0;\n}\n\n.mycontainer {\n  width: 100%;\n}\n\n.photo-row {\n  /* width:100%; */\n}\n\n.photo {\n  /* border: solid 1px black; */\n  /* padding: 0 10px; */\n  /* margin: 10px; */\n  /* background-color:gray; */\n  /* width:10%; */\n  /* width: 100px;\n  height:100px; */\n}\n\n.exerciseMemo {\n  font-size: 20px;\n  font-weight: 700;\n}\n\n.socialbtn {\n  margin-top: 20px;\n}\n\n.input_email {\n  display: flex;\n  margin-bottom: 20px;\n}\n\n.input_password {\n  display: flex;\n  margin-bottom: 20px;\n}\n\n.alreadyUser {\n  text-align: center;\n  font-size: 20px;\n}\n\n.buttons {\n  margin-top: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.form-check-input {\n  position:relative;\n  top:6px;\n  left:0px;\n}\n\n.form-password-input {\n  position:relative;\n  top:7px;\n  left:0px;\n}\n\n.mybtn1 {\n  background-color:transparent;\n  border:none;\n  position:fixed;\n  top:10%;\n  left:30px;\n  z-index: 700;\n}\n\n.mybtn2 {\n  background-color:transparent;\n  border:none;\n  position:fixed;\n  top:20%;\n  left:30px;\n  z-index: 700;\n}\n\n.mybtn3 {\n  background-color:transparent;\n  border:none;\n  position:fixed;\n  top:30%;\n  left:30px;\n  z-index: 700;\n}\n\n.mybtn4 {\n  background-color:transparent;\n  border:none;\n  position:fixed;\n  top:40%;\n  left:30px;\n  z-index: 700;\n}\n\n.mybtn5 {\n  background-color:transparent;\n  border:none;\n  position:fixed;\n  top: 6px;\n  right: 120px;\n  z-index: 700;\n}\n\n.mybtn6 {\n  background-color:transparent;\n  border:none;\n  position:fixed;\n  top: 30px;\n  right: 30px;\n  z-index: 700;\n}\n\n.setTimer2position {\n  position:fixed;\n  top:90px;\n  right:30px;\n  z-index:800;\n}\n\n.startbtnpositionsub {\n  position:relative;\n}\n\n.startbtnposition {\n  position: absolute;\n  top: 50%;\n  right:20px;\n  transform: translate(0, -50%);\n}\n\n.checkboxposition {\n  position:relative;\n}\n\n.secretcheckbox {\n  position: absolute;\n  top: 50%;\n  right:20px;\n  transform: translate(0, -50%);\n  /* line-height: 0.8; */\n}\n\n::placeholder {\n  color:white;\n  text-align: center;\n}\n\n.bytepositionsub {\n  position: relative;\n}\n\n.btyeposition {\n  position: absolute;\n  bottom:15px;\n  right:35px;\n}\n\n.viewsetting {\n  margin:auto;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}